{"version":3,"file":"sim-b5aad34d.chunk.js","sources":["../../../ui/smite_priest/presets.ts","../../../ui/smite_priest/inputs.ts","../../../ui/smite_priest/sim.ts"],"sourcesContent":["import { Consumes } from '../core/proto/common.js';\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport { SmitePriest_Rotation as Rotation, SmitePriest_Options as Options, SmitePriest_Rotation_RotationType } from '../core/proto/priest.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '5012300130505120501-005551002020052',\n\t}),\n};\n\nexport const HolyTalents = {\n\tname: 'Holy',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '50023011305-235050032002150520051',\n\t}),\n};\n\nexport const DefaultRotation = Rotation.create({\n\trotationType: SmitePriest_Rotation_RotationType.Basic,\n});\n\nexport const DefaultOptions = Options.create({\n\tuseShadowfiend: true,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfBlindingLight,\n\tfood: Food.FoodBlackenedBasilisk,\n\tdefaultPotion: Potions.SuperManaPotion,\n});\n\nexport const P1_PRESET = {\n\tname: 'P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\n      \"items\": [\n        {\n          \"id\": 24266,\n          \"enchant\": 29191,\n          \"gems\": [\n            28118,\n            24030,\n            24030\n          ]\n        },\n        {\n          \"id\": 28530\n        },\n        {\n          \"id\": 29060,\n          \"enchant\": 28886,\n          \"gems\": [\n            24030,\n            24030\n          ]\n        },\n        {\n          \"id\": 28766,\n          \"enchant\": 33150\n        },\n        {\n          \"id\": 29056,\n          \"enchant\": 24003,\n          \"gems\": [\n            24030,\n            24030,\n            24030\n          ]\n        },\n        {\n          \"id\": 24250,\n          \"enchant\": 22534,\n          \"gems\": [\n            24030\n          ]\n        },\n        {\n          \"id\": 30725,\n          \"enchant\": 28272,\n          \"gems\": [\n            24030,\n            24030\n          ]\n        },\n        {\n          \"id\": 24256,\n          \"gems\": [\n            24030,\n            24030\n          ]\n        },\n        {\n          \"id\": 30734,\n          \"enchant\": 24274,\n          \"gems\": [\n            24030,\n            24030,\n            24030\n          ]\n        },\n        {\n          \"id\": 28517,\n          \"enchant\": 35297,\n          \"gems\": [\n            24030,\n            24030\n          ]\n        },\n        {\n          \"id\": 28793,\n          \"enchant\": 22536\n        },\n        {\n          \"id\": 29172,\n          \"enchant\": 22536\n        },\n        {\n          \"id\": 27683\n        },\n        {\n          \"id\": 29370\n        },\n        {\n          \"id\": 30723,\n          \"enchant\": 22555,\n          \"gems\": [\n            30564,\n            31867\n          ]\n        },\n        {\n          \"id\": 28734\n        },\n        {\n          \"id\": 28673\n        }\n      ]\n    }`),\n};\n","import { SmitePriest_Rotation_RotationType as RotationType } from '../core/proto/priest.js';\nimport { Race, RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { NO_TARGET } from '../core/proto_utils/utils.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { Target } from '../core/target.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const SelfPowerInfusion = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecSmitePriest>({\n\tfieldName: 'powerInfusionTarget',\n\tid: ActionId.fromSpellId(10060),\n\textraCssClasses: [\n\t\t'within-raid-sim-hide',\n\t],\n\tgetValue: (player: Player<Spec.SpecSmitePriest>) => player.getSpecOptions().powerInfusionTarget?.targetIndex != NO_TARGET,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecSmitePriest>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tnewOptions.powerInfusionTarget = RaidTarget.create({\n\t\t\ttargetIndex: newValue ? 0 : NO_TARGET,\n\t\t});\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n\nexport const SmitePriestRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecSmitePriest, RotationType>({\n\t\t\tfieldName: 'rotationType',\n\t\t\tlabel: 'Rotation Type',\n\t\t\tlabelTooltip: 'Choose whether to weave optionally weave holy fire for increase Shadow Word: Pain uptime',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Basic', value: RotationType.Basic },\n\t\t\t\t{ name: 'HF Weave', value: RotationType.HolyFireWeave },\n\t\t\t],\n\t\t}),\n\t\tInputHelpers.makeSpecOptionsBooleanInput<Spec.SpecSmitePriest>({\n\t\t\tfieldName: 'useShadowfiend',\n\t\t\tlabel: 'Use Shadowfiend',\n\t\t\tlabelTooltip: 'Use Shadowfiend when low mana and off CD.',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\n\t\t\tfieldName: 'useMindBlast',\n\t\t\tlabel: 'Use Mind Blast',\n\t\t\tlabelTooltip: 'Use Mind Blast whenever off CD.',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\n\t\t\tfieldName: 'useShadowWordDeath',\n\t\t\tlabel: 'Use Shadow Word: Death',\n\t\t\tlabelTooltip: 'Use Shadow Word: Death whenever off CD.',\n\t\t}),\n\t],\n};\n","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Class } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\nimport { Encounter } from '../core/proto/common.js';\nimport { ItemSlot } from '../core/proto/common.js';\nimport { MobType } from '../core/proto/common.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\n\nimport { SmitePriest, SmitePriest_Rotation as Rotation, SmitePriest_Options as Options, SmitePriest_Rotation, SmitePriest_Rotation_RotationType } from '../core/proto/priest.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport * as Tooltips from '../core/constants/tooltips.js';\n\nimport * as SmitePriestInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class SmitePriestSimUI extends IndividualSimUI<Spec.SpecSmitePriest> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecSmitePriest>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'smite-priest-sim-ui',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatShadowSpellPower,\n\t\t\t\tStat.StatHolySpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecSmitePriest>) => {\n\t\t\t\tlet stats = new Stats();\n\t\t\t\tstats = stats.addStat(Stat.StatSpellHit,\n\t\t\t\t\tplayer.getTalents().shadowFocus * 2 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE +\n\t\t\t\t\tplayer.getTalents().focusedPower * 2 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\n\t\t\t\treturn {\n\t\t\t\t\ttalents: stats,\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 1.38,\n\t\t\t\t\t[Stat.StatSpirit]: 1.18,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellHit]: 2.57,\n\t\t\t\t\t[Stat.StatShadowSpellPower]: 0.05,\n\t\t\t\t\t[Stat.StatHolySpellPower]: 0.95,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.44,\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.28, // tricky because SP is tricky\n\t\t\t\t\t[Stat.StatMP5]: 2.05,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tarcaneBrilliance: true,\n\t\t\t\t\tdivineSpirit: true,\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tbloodlust: true,\n\t\t\t\t\tmanaSpringTotem: TristateEffect.TristateEffectRegular,\n\t\t\t\t\twrathOfAirTotem: true,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfWisdom: 2,\n\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tjudgementOfWisdom: true,\n\t\t\t\t\tmisery: true,\n\t\t\t\t\tcurseOfElements: true,\n\t\t\t\t}),\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tSmitePriestInputs.SelfPowerInfusion,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: SmitePriestInputs.SmitePriestRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.StandardTalents,\n\t\t\t\t\tPresets.HolyTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.P1_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["StandardTalents","name","data","SavedTalents","create","talentsString","HolyTalents","DefaultRotation","Rotation","rotationType","SmitePriest_Rotation_RotationType","Basic","DefaultOptions","Options","useShadowfiend","DefaultConsumes","Consumes","flask","Flask","FlaskOfBlindingLight","food","Food","FoodBlackenedBasilisk","defaultPotion","Potions","SuperManaPotion","P1_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","SelfPowerInfusion","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","powerInfusionTarget","targetIndex","NO_TARGET","setValue","eventID","newValue","newOptions","RaidTarget","setSpecOptions","SmitePriestRotationConfig","inputs","InputHelpers.makeRotationEnumInput","label","labelTooltip","values","value","RotationType","HolyFireWeave","InputHelpers.makeSpecOptionsBooleanInput","InputHelpers.makeRotationBooleanInput","SmitePriestSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatStamina","StatShadowSpellPower","StatHolySpellPower","modifyDisplayStats","stats","Stats","addStat","getTalents","shadowFocus","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","focusedPower","talents","defaults","Presets.P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","bloodlust","manaSpringTotem","TristateEffectRegular","wrathOfAirTotem","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","debuffs","Debuffs","judgementOfWisdom","misery","curseOfElements","playerIconInputs","SmitePriestInputs.SelfPowerInfusion","rotationInputs","SmitePriestInputs.SmitePriestRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","Presets.HolyTalents"],"mappings":"8SAiBO,MAAMA,EAAkB,CAC9BC,KAAM,WACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,yCAIJC,EAAc,CAC1BL,KAAM,OACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,uCAIJE,EAAkBC,EAASJ,OAAO,CAC9CK,aAAcC,EAAkCC,QAGpCC,EAAiBC,EAAQT,OAAO,CAC5CU,gBAAgB,IAGJC,EAAkBC,EAASZ,OAAO,CAC9Ca,MAAOC,EAAMC,qBACbC,KAAMC,EAAKC,sBACXC,cAAeC,EAAQC,kBAGXC,EAAY,CACxBzB,KAAM,YACN0B,QAASC,EACTC,KAAMC,EAAcC,eAAe,szDChCvBC,EAAoBC,EAAmE,CACnGC,UAAW,sBACXC,GAAIC,EAASC,YAAY,OACzBC,gBAAiB,CAChB,wBAEDC,SAAWC,GAAyCA,EAAOC,iBAAiBC,qBAAqBC,aAAeC,EAChHC,SAAU,CAACC,EAAkBN,EAAsCO,KAC5D,MAAAC,EAAaR,EAAOC,iBACfO,EAAAN,oBAAsBO,EAAW7C,OAAO,CAClDuC,YAAaI,EAAW,EAAIH,IAEtBJ,EAAAU,eAAeJ,EAASE,EAAU,IAI9BG,EAA4B,CACxCC,OAAQ,CACPC,EAAuE,CACtEnB,UAAW,eACXoB,MAAO,gBACPC,aAAc,2FACdC,OAAQ,CACP,CAAEvD,KAAM,QAASwD,MAAOC,EAAa/C,OACrC,CAAEV,KAAM,WAAYwD,MAAOC,EAAaC,kBAG1CC,EAA+D,CAC9D1B,UAAW,iBACXoB,MAAO,kBACPC,aAAc,8CAEfM,EAA4D,CAC3D3B,UAAW,eACXoB,MAAO,iBACPC,aAAc,oCAEfM,EAA4D,CAC3D3B,UAAW,qBACXoB,MAAO,yBACPC,aAAc,8CC5BV,MAAMO,UAAyBC,EACrCC,YAAYC,EAAyBzB,GACpC0B,MAAMD,EAAYzB,EAAQ,CACzB2B,SAAU,sBAEVC,YAAa,GAIbC,QAAS,CACRC,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAGNC,gBAAiBR,EAAKG,eAEtBM,aAAc,CACbT,EAAKU,WACLV,EAAKW,YACLX,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKY,qBACLZ,EAAKa,mBACLb,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAENO,mBAAqB5C,IAChB,IAAA6C,EAAQ,IAAIC,EAKT,OAJPD,EAAQA,EAAME,QAAQjB,EAAKI,aACQ,EAAlClC,EAAOgD,aAAaC,YAAkBC,EACH,EAAnClD,EAAOgD,aAAaG,aAAmBD,GAEjC,CACNE,QAASP,EAAA,EAIXQ,SAAU,CAEThE,KAAMiE,EAAkBjE,KAExBkE,UAAWT,EAAMU,QAAQ,CACxB,CAAC1B,EAAKC,eAAgB,KACtB,CAACD,EAAKE,YAAa,KACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,cAAe,KACrB,CAACJ,EAAKY,sBAAuB,IAC7B,CAACZ,EAAKa,oBAAqB,IAC3B,CAACb,EAAKK,eAAgB,IACtB,CAACL,EAAKM,gBAAiB,IACvB,CAACN,EAAKO,SAAU,OAGjBoB,SAAUC,EAEVC,SAAUC,EAEVR,QAASS,EAAwBnG,KAEjCoG,YAAaC,EAEbC,UAAWC,EAAUrG,OAAO,CAC3BsG,kBAAkB,EAClBC,cAAc,EACdC,cAAeC,EAAeC,uBAC9BC,WAAW,EACXC,gBAAiBH,EAAeI,sBAChCC,iBAAiB,IAElBC,WAAYC,EAAWhH,OAAO,IAE9BiH,gBAAiBC,EAAgBlH,OAAO,CACvCmH,iBAAiB,EACjBC,iBAAkB,IAGnBC,QAASC,EAAQtH,OAAO,CACvBuH,mBAAmB,EACnBC,QAAQ,EACRC,iBAAiB,KAKnBC,iBAAkB,CACjBC,GAGDC,eAAgBC,EAEhBC,wBAAyB,GAEzBC,wBAAyB,GAGzBC,YAAa,CACZhF,OAAQ,CACPiF,IAGFC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAER5C,QAAS,CACRS,EACAoC,GAGD5G,KAAM,CACLiE,KAIJ"}