import"./modulepreload-polyfill-e60e1b44.chunk.js";import{C as t,T as e,m as s,bS as a,bT as i,bU as n,bV as o,bW as l,s as r,bX as d,bY as c,bZ as m,b_ as p,b$ as u,Q as g,c0 as h,c1 as v,S as y,aS as f,aG as C,c2 as b}from"./raid_sim_action-a61fd70b.chunk.js";class E extends t{constructor(t){super(t.parent,t.rootCssClass||""),this.colorSettings=t.colorSettings,this.lastSimResult=null,t.resultsEmitter.on(((t,e)=>{e&&(this.lastSimResult=e,this.onSimResult(e))}))}getLastSimResult(){if(this.lastSimResult)return this.lastSimResult;throw new Error("No last sim result!")}}class x extends s{constructor(t,s,a){const i=new e;super(t,"unit-filter-root",s,{extraCssClasses:["dropdown-root"],changedEvent:t=>i,getValue:t=>this.getFilterDataValue(t),setValue:(t,e,s)=>this.setFilterDataValue(e,s)}),this.filterData=s,this.changeEmitter=i,this.allUnitsOption={iconUrl:"",text:a,color:"black",value:-1},this.currentOptions=[this.allUnitsOption],this.rootElem.innerHTML='\n\t\t\t<div class="dropdown-button unit-filter-button"></div>\n\t\t\t<div class="dropdown-panel unit-filter-dropdown"></div>\n    ',this.buttonElem=this.rootElem.getElementsByClassName("unit-filter-button")[0],this.dropdownElem=this.rootElem.getElementsByClassName("unit-filter-dropdown")[0],this.buttonElem.addEventListener("click",(t=>{t.preventDefault()})),this.init()}setOptions(t,e){this.currentOptions=[this.allUnitsOption].concat(this.getAllUnits(e).map((t=>({iconUrl:t.iconUrl||"",text:t.label,color:t.classColor||"black",value:t.unitIndex}))));null!=this.currentOptions.find((t=>t.value==this.getInputValue()))||(this.setFilterDataValue(this.filterData,this.allUnitsOption.value),this.changeEmitter.emit(t)),this.dropdownElem.innerHTML="",this.currentOptions.forEach((t=>this.dropdownElem.appendChild(this.makeOption(t))))}makeOption(t){const s=this.makeOptionElem(t);return s.addEventListener("click",(s=>{s.preventDefault(),this.setFilterDataValue(this.filterData,t.value),this.changeEmitter.emit(e.nextEventID())})),s}makeOptionElem(t){const e=document.createElement("div");e.classList.add("dropdown-option-container");const s=document.createElement("div");if(s.classList.add("dropdown-option","unit-filter-option"),e.appendChild(s),t.color&&(s.style.backgroundColor=t.color),t.iconUrl){const e=document.createElement("img");e.src=t.iconUrl,e.classList.add("unit-filter-icon"),s.appendChild(e)}if(t.text){const e=document.createElement("span");e.textContent=t.text,e.classList.add("unit-filter-label"),s.appendChild(e)}return e}getInputElem(){return this.buttonElem}getInputValue(){return this.getFilterDataValue(this.filterData)}setInputValue(t){this.setFilterDataValue(this.filterData,t);const e=this.currentOptions.find((e=>e.value==t));e&&(this.buttonElem.innerHTML="",this.buttonElem.appendChild(this.makeOptionElem(e)))}}class w extends x{constructor(t,e){super(t,e,"All Players"),this.rootElem.classList.add("player-filter-root")}getFilterDataValue(t){return t.player}setFilterDataValue(t,e){t.player=e}getAllUnits(t){return t.getPlayers()}}class T extends x{constructor(t,e){super(t,e,"All Targets"),this.rootElem.classList.add("target-filter-root")}getFilterDataValue(t){return t.target}setFilterDataValue(t,e){t.target=e}getAllUnits(t){return t.getTargets()}}var D=(t=>(t[t.None=0]="None",t[t.Ascending=1]="Ascending",t[t.Descending=2]="Descending",t))(D||{});class S extends E{constructor(t,s){super(t),this.onUpdate=new e("MetricsTableUpdate"),this.columnConfigs=s,this.rootElem.innerHTML='\n\t\t<table class="metrics-table tablesorter">\n\t\t\t<thead class="metrics-table-header">\n\t\t\t\t<tr class="metrics-table-header-row"></tr>\n\t\t\t</thead>\n\t\t\t<tbody class="metrics-table-body">\n\t\t\t</tbody>\n\t\t</table>\n\t\t',this.tableElem=this.rootElem.getElementsByClassName("metrics-table")[0],this.bodyElem=this.rootElem.getElementsByClassName("metrics-table-body")[0];const a=this.rootElem.getElementsByClassName("metrics-table-header-row")[0];this.columnConfigs.forEach((t=>{const e=document.createElement("th");e.classList.add("metrics-table-header-cell"),t.headerCellClass&&e.classList.add(t.headerCellClass),t.columnClass&&e.classList.add(t.columnClass),e.innerHTML=`<span>${t.name}</span>`,t.tooltip&&tippy(e,{content:t.tooltip,allowHTML:!0}),a.appendChild(e)}));const i=this.columnConfigs.map(((t,e)=>[e,1==t.sort?0:1])).filter((t=>this.columnConfigs[t[0]].sort));$(this.tableElem).tablesorter({sortList:i,cssChildRow:"child-metric"})}sortMetrics(t){this.columnConfigs.filter((t=>t.sort)).forEach((e=>{if(!e.getValue)throw new Error("Can' apply group sorting without getValue");1==e.sort?t.sort(((t,s)=>e.getValue(t)-e.getValue(s))):t.sort(((t,s)=>e.getValue(s)-e.getValue(t)))}))}addRow(t){const e=document.createElement("tr");return this.bodyElem.appendChild(e),this.columnConfigs.forEach((s=>{const a=document.createElement("td");if(s.columnClass&&a.classList.add(s.columnClass),s.fillCell)s.fillCell(t,a,e);else{if(!s.getDisplayString)throw new Error("Metrics column config does not provide content function: "+s.name);a.textContent=s.getDisplayString(t)}e.appendChild(a)})),this.customizeRowElem(t,e),e}addGroup(t){if(0==t.length)return;if(1==t.length&&this.shouldCollapse(t[0]))return void this.addRow(t[0]);this.sortMetrics(t);const e=this.mergeMetrics(t),s=this.addRow(e),a=t.map((t=>this.addRow(t)));a.forEach((t=>t.classList.add("child-metric")));let i=!0;s.classList.add("parent-metric","expand"),s.addEventListener("click",(t=>{i=!i,i?(a.forEach((t=>t.classList.remove("hide"))),s.classList.add("expand")):(a.forEach((t=>t.classList.add("hide"))),s.classList.remove("expand"))}))}onSimResult(t){this.bodyElem.textContent="";const e=this.getGroupedMetrics(t).filter((t=>t.length>0));if(0==e.length)return this.rootElem.classList.add("hide"),void this.onUpdate.emit(t.eventID);this.rootElem.classList.remove("hide"),e.forEach((t=>this.addGroup(t))),$(this.tableElem).trigger("update"),this.onUpdate.emit(t.eventID)}shouldCollapse(t){return!0}customizeRowElem(t,e){}mergeMetrics(t){return t[0]}static nameCellConfig(t){return{name:"Name",fillCell:(e,s,a)=>{const i=t(e);s.innerHTML=`\n\t\t\t\t<a class="metrics-action-icon"></a>\n\t\t\t\t<span class="metrics-action-name">${i.name}</span>\n\t\t\t\t<span class="expand-toggle fa fa-caret-down"></span>\n\t\t\t\t<span class="expand-toggle fa fa-caret-right"></span>\n\t\t\t\t`;const n=s.getElementsByClassName("metrics-action-icon")[0];i.actionId.setBackgroundAndHref(n)}}}static playerNameCellConfig(){return{name:"Name",fillCell:(t,e,s)=>{e.innerHTML=`\n\t\t\t\t<img class="metrics-action-icon" src="${t.iconUrl}"></img>\n\t\t\t\t<span class="metrics-action-name" style="color:${t.classColor}">${t.label}</span>\n\t\t\t\t`}}}}class L extends S{constructor(t,e){t.rootCssClass="resource-metrics-table-root",super(t,[S.nameCellConfig((t=>({name:t.name,actionId:t.actionId}))),{name:"Casts",tooltip:"Casts",getValue:t=>t.events,getDisplayString:t=>t.events.toFixed(1)},{name:"Gain",tooltip:"Gain",sort:D.Descending,getValue:t=>t.gain,getDisplayString:t=>t.gain.toFixed(1)},{name:"Gain / s",tooltip:"Gain / Second",getValue:t=>t.gainPerSecond,getDisplayString:t=>t.gainPerSecond.toFixed(1)},{name:"Avg Gain",tooltip:"Gain / Event",getValue:t=>t.avgGain,getDisplayString:t=>t.avgGain.toFixed(1)},{name:"Wasted Gain",tooltip:"Gain that was wasted because of resource cap.",getValue:t=>t.wastedGain,getDisplayString:t=>t.wastedGain.toFixed(1)}]),this.resourceType=e}getGroupedMetrics(t){const e=t.result.getPlayers(t.filter);if(1!=e.length)return[];const s=e[0].getResourceMetrics(this.resourceType);return l.groupById(s)}mergeMetrics(t){return l.merge(t,!0,t[0].unit?.petActionId||void 0)}}const I=["#dd9933","#67074e","#5a175d","#074e67","#05878a","#c9c1e7","#bdd5ef","#c7e3d0","#e7e6ce","#f2d8cc","#e9ccce"];class P extends t{constructor(t,e){const s=document.createElement("canvas");super(t,"source-chart-root",s),s.style.height="400px",s.style.width="600px",s.height=400,s.width=600;const a=e.filter((t=>t.damage>0)).sort(((t,e)=>e.damage-t.damage)),i=a.map((t=>t.name)),n=r(a.map((t=>t.damage))),o=a.map((t=>t.damage/n)),l=I.slice(0,a.length),d=s.getContext("2d");new Chart(d,{type:"pie",data:{labels:i,datasets:[{data:o,backgroundColor:l}]},options:{plugins:{legend:{display:!0,position:"right"}}}})}}class F extends S{constructor(t,e){t.rootCssClass=e?"debuff-metrics-root":"buff-metrics-root",super(t,[S.nameCellConfig((t=>({name:t.name,actionId:t.actionId}))),{name:"Procs",tooltip:"Procs",getValue:t=>t.averageProcs,getDisplayString:t=>t.averageProcs.toFixed(2)},{name:"PPM",tooltip:"Procs Per Minute",getValue:t=>t.ppm,getDisplayString:t=>t.ppm.toFixed(2)},{name:"Uptime",tooltip:"Uptime / Encounter Duration",sort:D.Descending,getValue:t=>t.uptimePercent,getDisplayString:t=>t.uptimePercent.toFixed(2)+"%"}]),this.useDebuffs=e}getGroupedMetrics(t){if(this.useDebuffs)return c.groupById(t.result.getDebuffMetrics(t.filter));{const e=t.result.getPlayers(t.filter);if(1!=e.length)return[];const s=e[0],a=s.auras,i=c.groupById(a),n=s.pets.map((t=>t.auras));return i.concat(n)}}mergeMetrics(t){return c.merge(t,!0,t[0].unit?.petActionId||void 0)}shouldCollapse(t){return!t.unit?.isPet}}const A=1,k=2,M=3,R={[m.OtherActionAttack]:0,[m.OtherActionShoot]:.5,26996:.1,33987:A+.1,33745:A+.2,26997:A+.3,33983:A+.1,27002:A+.2,27008:A+.3,24248:A+.4,48996:.1,53217:.6,53209:A+.1,53353:A+.11,60053:A+.1,49050:A+.2,49048:A+.21,49045:A+.22,49052:A+.27,61006:A+.28,34490:A+.29,49001:A+.3,3043:A+.3,53238:A+.31,63672:A+.32,49067:A+.33,58434:A+.34,27156:.1,20182:.2,27179:k+.1,35395:A+.1,53385:A+.2,53408:k+.1,20271:k+.1,31804:k+.2,20467:k+.2,20187:k+.2,48801:k+.3,48819:k+.4,48817:k+.5,48806:k+.6,54428:k+.7,6774:A+.1,26866:A+.2,48672:A+.3,57993:A+.3,48668:A+.4,48666:A+.5,48665:A+.6,48664:A+.7,48638:A+.5,51723:A+.8,57973:k+.1,57968:k+.2,17364:A+.1,25454:A+.2,25457:A+.2,25464:A+.2,25533:k+.2,25552:k+.2,25537:k+.2,25359:k+.3,8512:k+.3,10613:k+.3,10614:k+.3,25585:k+.3,25587:k+.3,2825:M+.1,47867:k+.01,47864:k+.02,47813:k+.1,59164:k+.2,47843:k+.3,47811:k+.31,17962:k+.32,59172:k+.49,47809:k+.5,47838:k+.51,47825:k+.52,47855:k+.6,57946:k+.7,47241:k+.8,50589:k+.81,47193:k+.82,42842:k+.01,47610:k+.02,42897:k+.02,42833:k+.02,42891:k+.1,42846:k+.1,55360:k+.2,12848:k+.3,12472:k+.4,11129:k+.4,12042:k+.4,12043:k+.41,31687:k+.41,55342:k+.5,33312:k+.51,12051:k+.52,44401:k+.6,44448:k+.6,12536:k+.61,25231:.1,29707:.1,25242:A+.05,30335:A+.1,30330:A+.1,30356:A+.1,1680:A+.2,11585:A+.3,25212:A+.4,25236:A+.5,71:M+.1,2457:M+.1,2458:M+.1,51425:A+.05,55268:A+.1,49930:A+.15,50842:A+.2,51411:A+.25,49895:A+.25,49938:A+.25,63560:A+.25,50536:A+.25,57623:A+.25,59131:A+.3,49921:A+.3,51271:A+.35,45529:A+.35,47568:A+.35,49206:A+.35,46584:A+.35,55095:A+.4,55078:A+.4,49655:A+.4,50401:A+.5,51460:A+.5,50463:A+.5,50689:M+.1,48263:M+.1,48265:M+.1,26992:k+.91,27150:k+.92,27169:k+.93},B=[6774,26866,26865,26867],V=[p.ResourceTypeHealth,p.ResourceTypeMana];const H=new URLSearchParams(window.location.search);H.has("mainTextColor")&&document.body.style.setProperty("--main-text-color",H.get("mainTextColor")),H.has("themeColorPrimary")&&document.body.style.setProperty("--theme-color-primary",H.get("themeColorPrimary")),H.has("themeColorBackground")&&document.body.style.setProperty("--theme-color-background",H.get("themeColorBackground")),H.has("themeColorBackgroundRaw")&&document.body.style.setProperty("--theme-color-background-raw",H.get("themeColorBackgroundRaw")),H.has("themeBackgroundImage")&&document.body.style.setProperty("--theme-background-image",H.get("themeBackgroundImage")),H.has("themeBackgroundOpacity")&&document.body.style.setProperty("--theme-background-opacity",H.get("themeBackgroundOpacity"));H.has("isIndividualSim")&&document.body.classList.add("individual-sim");if(Boolean(window.frameElement)){const t=document.createElement("base");t.target="_parent",document.head.appendChild(t)}else document.body.classList.add("new-tab");const N={mainTextColor:document.body.style.getPropertyValue("--main-text-color")};Chart.defaults.color=N.mainTextColor;document.body.innerHTML='\n<div class="dr-root">\n\t<ul class="dr-toolbar nav nav-tabs">\n\t\t<li class="results-filter">\n\t\t</li>\n\t\t<li class="tabs-filler">\n\t\t</li>\n\t\t<li class="dr-tab-tab active"><a data-toggle="tab" href="#damageTab">DAMAGE</a></li>\n\t\t<li class="dr-tab-tab threat-metrics"><a data-toggle="tab" href="#damageTakenTab">DAMAGE TAKEN</a></li>\n\t\t<li class="dr-tab-tab"><a data-toggle="tab" href="#buffsTab">BUFFS</a></li>\n\t\t<li class="dr-tab-tab"><a data-toggle="tab" href="#debuffsTab">DEBUFFS</a></li>\n\t\t<li class="dr-tab-tab"><a data-toggle="tab" href="#castsTab">CASTS</a></li>\n\t\t<li class="dr-tab-tab"><a data-toggle="tab" href="#resourcesTab">RESOURCES</a></li>\n\t\t<li class="dr-tab-tab"><a data-toggle="tab" href="#timelineTab" id="timelineTabTab">TIMELINE</a></li>\n\t</ul>\n\t<div class="tab-content">\n\t\t<div id="damageTab" class="tab-pane dr-tab-content damage-content fade active in">\n\t\t\t<div class="dr-row topline-results">\n\t\t\t</div>\n\t\t\t<div class="dr-row all-players-only">\n\t\t\t\t<div class="player-damage-metrics">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="dr-row single-player-only">\n\t\t\t\t<div class="melee-metrics">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="dr-row single-player-only">\n\t\t\t\t<div class="spell-metrics">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="dr-row dps-histogram">\n\t\t\t</div>\n\t\t</div>\n\t\t<div id="damageTakenTab" class="tab-pane dr-tab-content damage-taken-content fade">\n\t\t\t<div class="dr-row single-player-only">\n\t\t\t\t<div class="dtps-melee-metrics">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="dr-row single-player-only">\n\t\t\t\t<div class="dtps-spell-metrics">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="dr-row damage-taken-histogram single-player-only">\n\t\t\t</div>\n\t\t</div>\n\t\t<div id="buffsTab" class="tab-pane dr-tab-content buffs-content fade">\n\t\t\t<div class="dr-row">\n\t\t\t\t<div class="buff-aura-metrics">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id="debuffsTab" class="tab-pane dr-tab-content debuffs-content fade">\n\t\t\t<div class="dr-row">\n\t\t\t\t<div class="debuff-aura-metrics">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id="castsTab" class="tab-pane dr-tab-content casts-content fade">\n\t\t\t<div class="dr-row">\n\t\t\t\t<div class="cast-metrics">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id="resourcesTab" class="tab-pane dr-tab-content resources-content fade">\n\t\t\t<div class="dr-row">\n\t\t\t\t<div class="resource-metrics">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id="timelineTab" class="tab-pane dr-tab-content timeline-content fade">\n\t\t\t<div class="dr-row">\n\t\t\t\t<div class="timeline">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n';const U=new e,O=new class extends E{constructor(t){t.rootCssClass="results-filter-root",super(t),this.currentFilter={player:-1,target:-1},this.changeEmitter=new e,this.playerFilter=new w(this.rootElem,this.currentFilter),this.playerFilter.changeEmitter.on((t=>this.changeEmitter.emit(t))),this.targetFilter=new T(this.rootElem,this.currentFilter),this.targetFilter.changeEmitter.on((t=>this.changeEmitter.emit(t)))}getFilter(){return{player:-1==this.currentFilter.player?null:this.currentFilter.player,target:-1==this.currentFilter.target?null:this.currentFilter.target}}onSimResult(t){this.playerFilter.setOptions(t.eventID,t.result),this.targetFilter.setOptions(t.eventID,t.result)}setPlayer(t,e){this.currentFilter.player=null===e?-1:e,this.playerFilter.changeEmitter.emit(t)}setTarget(t,e){this.currentFilter.target=null===e?-1:e,this.targetFilter.changeEmitter.emit(t)}}({parent:document.body.getElementsByClassName("results-filter")[0],resultsEmitter:U,colorSettings:N}),G=document.body.getElementsByClassName("topline-results")[0];new class extends E{constructor(t){t.rootCssClass="topline-results-root",super(t)}onSimResult(t){let e=v.makeToplineResultsContent(t.result,t.filter);const s=[y.SpecFeralTankDruid,y.SpecRogue,y.SpecWarrior,y.SpecProtectionWarrior],a=t.result.getPlayers(t.filter);if(1==a.length&&!s.includes(a[0].spec)){const s=a[0].secondsOomAvg,i=s/t.result.encounterMetrics.durationSeconds;e+=`\n\t\t\t\t<div class="percent-oom ${i<.01?"safe":i<.05?"warning":"danger"}">\n\t\t\t\t\t<span class="topline-result-avg">${s.toFixed(1)}s</span>\n\t\t\t\t\t<span class="topline-result-label"> spent OOM</span>\n\t\t\t\t</div>\n\t\t\t`}this.rootElem.innerHTML=e}}({parent:G,resultsEmitter:U,colorSettings:N}),new class extends S{constructor(t){t.rootCssClass="cast-metrics-root",super(t,[S.nameCellConfig((t=>({name:t.name,actionId:t.actionId}))),{name:"Casts",tooltip:"Casts",sort:D.Descending,getValue:t=>t.casts,getDisplayString:t=>t.casts.toFixed(1)},{name:"CPM",tooltip:"Casts / (Encounter Duration / 60 Seconds)",getValue:t=>t.castsPerMinute,getDisplayString:t=>t.castsPerMinute.toFixed(1)}])}getGroupedMetrics(t){const e=t.result.getPlayers(t.filter);if(1!=e.length)return[];const s=e[0],i=s.actions.filter((t=>0!=t.casts)).map((e=>e.forTarget(t.filter))),n=a.groupById(i),o=s.pets.map((e=>e.actions.filter((t=>0!=t.casts)).map((e=>e.forTarget(t.filter)))));return n.concat(o)}mergeMetrics(t){return a.merge(t,!0,t[0].unit?.petActionId||void 0)}shouldCollapse(t){return!t.unit?.isPet}}({parent:document.body.getElementsByClassName("cast-metrics")[0],resultsEmitter:U,colorSettings:N}),new class extends S{constructor(t){t.rootCssClass="melee-metrics-root",super(t,[S.nameCellConfig((t=>({name:t.name,actionId:t.actionId}))),{name:"DPS",tooltip:"Damage / Encounter Duration",sort:D.Descending,getValue:t=>t.dps,getDisplayString:t=>t.dps.toFixed(1)},{name:"Avg Cast",tooltip:"Damage / Casts",getValue:t=>t.avgCast,getDisplayString:t=>t.avgCast.toFixed(1)},{name:"Avg Hit",tooltip:"Damage / (Hits + Crits + Glances + Blocks)",getValue:t=>t.avgHit,getDisplayString:t=>t.avgHit.toFixed(1)},{name:"TPS",tooltip:"Threat / Encounter Duration",columnClass:"threat-metrics",getValue:t=>t.tps,getDisplayString:t=>t.tps.toFixed(1)},{name:"Avg Cast",tooltip:"Threat / Casts",columnClass:"threat-metrics",getValue:t=>t.avgCastThreat,getDisplayString:t=>t.avgCastThreat.toFixed(1)},{name:"Avg Hit",tooltip:"Threat / (Hits + Crits + Glances + Blocks)",columnClass:"threat-metrics",getValue:t=>t.avgHitThreat,getDisplayString:t=>t.avgHitThreat.toFixed(1)},{name:"Casts",tooltip:"Casts",getValue:t=>t.casts,getDisplayString:t=>t.casts.toFixed(1)},{name:"Hits",tooltip:"Hits + Crits + Glances + Blocks",getValue:t=>t.landedHits,getDisplayString:t=>t.landedHits.toFixed(1)},{name:"Miss %",tooltip:"Misses / Swings",getValue:t=>t.missPercent,getDisplayString:t=>t.missPercent.toFixed(2)+"%"},{name:"Dodge %",tooltip:"Dodges / Swings",getValue:t=>t.dodgePercent,getDisplayString:t=>t.dodgePercent.toFixed(2)+"%"},{name:"Parry %",tooltip:"Parries / Swings",columnClass:"in-front-of-target",getValue:t=>t.parryPercent,getDisplayString:t=>t.parryPercent.toFixed(2)+"%"},{name:"Block %",tooltip:"Blocks / Swings",columnClass:"in-front-of-target",getValue:t=>t.blockPercent,getDisplayString:t=>t.blockPercent.toFixed(2)+"%"},{name:"Glance %",tooltip:"Glances / Swings",getValue:t=>t.glancePercent,getDisplayString:t=>t.glancePercent.toFixed(2)+"%"},{name:"Crit %",tooltip:"Crits / Swings",getValue:t=>t.critPercent,getDisplayString:t=>t.critPercent.toFixed(2)+"%"}])}getGroupedMetrics(t){const e=t.result.getPlayers(t.filter);if(1!=e.length)return[];const s=e[0];s.inFrontOfTarget?this.rootElem.classList.remove("hide-in-front-of-target"):this.rootElem.classList.add("hide-in-front-of-target");const n=s.getMeleeActions().map((e=>e.forTarget(t.filter))),o=a.groupById(n),l=i(s.pets,(t=>t.name)),r=Object.values(l).map((e=>a.joinById(e.map((e=>e.getMeleeActions().map((e=>e.forTarget(t.filter))))).flat(),!0)));return o.concat(r)}mergeMetrics(t){return a.merge(t,!0,t[0].unit?.petActionId||void 0)}shouldCollapse(t){return!t.unit?.isPet}}({parent:document.body.getElementsByClassName("melee-metrics")[0],resultsEmitter:U,colorSettings:N}),new class extends S{constructor(t){t.rootCssClass="spell-metrics-root",super(t,[S.nameCellConfig((t=>({name:t.name,actionId:t.actionId}))),{name:"DPS",tooltip:"Damage / Encounter Duration",sort:D.Descending,getValue:t=>t.dps,getDisplayString:t=>t.dps.toFixed(1)},{name:"Avg Cast",tooltip:"Damage / Casts",getValue:t=>t.avgCast,getDisplayString:t=>t.avgCast.toFixed(1)},{name:"Avg Hit",tooltip:"Damage / Hits",getValue:t=>t.avgHit,getDisplayString:t=>t.avgHit.toFixed(1)},{name:"TPS",tooltip:"Threat / Encounter Duration",columnClass:"threat-metrics",getValue:t=>t.tps,getDisplayString:t=>t.tps.toFixed(1)},{name:"Avg Cast",tooltip:"Threat / Casts",columnClass:"threat-metrics",getValue:t=>t.avgCastThreat,getDisplayString:t=>t.avgCastThreat.toFixed(1)},{name:"Avg Hit",tooltip:"Threat / Hits",columnClass:"threat-metrics",getValue:t=>t.avgHitThreat,getDisplayString:t=>t.avgHitThreat.toFixed(1)},{name:"Casts",tooltip:"Casts",getValue:t=>t.casts,getDisplayString:t=>t.casts.toFixed(1)},{name:"Hits",tooltip:"Hits",getValue:t=>t.landedHits,getDisplayString:t=>t.landedHits.toFixed(1)},{name:"Miss %",tooltip:"Misses / (Hits + Misses)",getValue:t=>t.missPercent,getDisplayString:t=>t.missPercent.toFixed(2)+"%"},{name:"Crit %",tooltip:"Crits / Hits",getValue:t=>t.critPercent,getDisplayString:t=>t.critPercent.toFixed(2)+"%"}])}customizeRowElem(t,e){0==t.hitAttempts&&0==t.dps&&e.classList.add("threat-metrics")}getGroupedMetrics(t){const e=t.result.getPlayers(t.filter);if(1!=e.length)return[];const s=e[0],n=s.getSpellActions().map((e=>e.forTarget(t.filter))),o=a.groupById(n),l=i(s.pets,(t=>t.name)),r=Object.values(l).map((e=>a.joinById(e.map((e=>e.getSpellActions().map((e=>e.forTarget(t.filter))))).flat(),!0)));return o.concat(r)}mergeMetrics(t){return a.merge(t,!0,t[0].unit?.petActionId||void 0)}shouldCollapse(t){return!t.unit?.isPet}}({parent:document.body.getElementsByClassName("spell-metrics")[0],resultsEmitter:U,colorSettings:N}),new class extends E{constructor(t){t.rootCssClass="resource-metrics-root",super(t),n.forEach((e=>{const s=document.createElement("div");s.classList.add("resource-metrics-table-container","hide"),s.innerHTML=`<span class="resource-metrics-table-title">${o[e]}</span>`,this.rootElem.appendChild(s);const a=t;a.parent=s;const i=new L(a,e);i.onUpdate.on((()=>{i.rootElem.classList.contains("hide")?s.classList.add("hide"):s.classList.remove("hide")}))}))}onSimResult(t){}}({parent:document.body.getElementsByClassName("resource-metrics")[0],resultsEmitter:U,colorSettings:N}),new class extends S{constructor(t,e){t.rootCssClass="player-damage-metrics-root",super(t,[S.playerNameCellConfig(),{name:"Amount",tooltip:"Player Damage / Raid Damage",headerCellClass:"amount-header-cell",fillCell:(t,e,s)=>{e.classList.add("amount-cell");let a=null;tippy(s,{content:"Loading...",placement:"bottom",onShow(e){a||(a=(()=>{const e=document.createElement("div");return s.appendChild(e),new P(e,t.actions),e})(),e.setContent(a))}}),e.innerHTML=`\n\t\t\t\t\t\t<div class="player-damage-percent">\n\t\t\t\t\t\t\t<span>${(t.dps.avg/this.raidDps*100).toFixed(2)}%</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="player-damage-bar-container">\n\t\t\t\t\t\t\t<div class="player-damage-bar" style="background-color:${t.classColor}; width:${t.dps.avg/this.maxDps*100}%"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="player-damage-total">\n\t\t\t\t\t\t\t<span>${(t.totalDamage/1e3).toFixed(1)}k</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`}},{name:"DPS",tooltip:"Damage / Encounter Duration",sort:D.Descending,getValue:t=>t.dps.avg,getDisplayString:t=>t.dps.avg.toFixed(1)}]),this.resultsFilter=e,this.raidDps=0,this.maxDps=0}customizeRowElem(t,e){e.classList.add("player-damage-row"),e.addEventListener("click",(e=>{this.resultsFilter.setPlayer(this.getLastSimResult().eventID,t.unitIndex)}))}getGroupedMetrics(t){const e=t.result.getPlayers(t.filter);this.raidDps=t.result.raidMetrics.dps.avg;const s=d(e.map((t=>t.dps.avg)));return this.maxDps=e[s].dps.avg,e.map((t=>[t]))}}({parent:document.body.getElementsByClassName("player-damage-metrics")[0],resultsEmitter:U,colorSettings:N},O),new F({parent:document.body.getElementsByClassName("buff-aura-metrics")[0],resultsEmitter:U,colorSettings:N},!1),new F({parent:document.body.getElementsByClassName("debuff-aura-metrics")[0],resultsEmitter:U,colorSettings:N},!0),new class extends E{constructor(t){t.rootCssClass="dps-histogram-root",super(t)}onSimResult(t){const e=this.rootElem.getBoundingClientRect();this.rootElem.textContent="";const s=document.createElement("canvas");s.height=e.height,s.width=e.width;const a=t.result.getDamageMetrics(t.filter),i=a.avg-a.stdev,n=a.avg+a.stdev,o=[],l=[],r=Object.keys(a.hist);r.forEach(((t,e)=>{o.push(a.hist[Number(t)]);const s=parseInt(t);s>i&&s<n?l.push("#1E87F0"):l.push("#FF6961")}));const d=s.getContext("2d");new Chart(d,{type:"bar",data:{labels:r,datasets:[{data:o,backgroundColor:l}]},options:{plugins:{title:{display:!0,text:"DPS Histogram"},legend:{display:!1,labels:{}}},scales:{y:{beginAtZero:!0,ticks:{display:!1}}}}}),this.rootElem.appendChild(s)}}({parent:document.body.getElementsByClassName("dps-histogram")[0],resultsEmitter:U,colorSettings:N}),new class extends S{constructor(t){t.rootCssClass="dtps-melee-metrics-root",super(t,[S.nameCellConfig((t=>({name:t.name,actionId:t.actionId}))),{name:"DPS",tooltip:"Damage / Encounter Duration",sort:D.Descending,getValue:t=>t.dps,getDisplayString:t=>t.dps.toFixed(1)},{name:"Avg Cast",tooltip:"Damage / Casts",getValue:t=>t.avgCast,getDisplayString:t=>t.avgCast.toFixed(1)},{name:"Avg Hit",tooltip:"Damage / (Hits + Crits + Glances + Blocks)",getValue:t=>t.avgHit,getDisplayString:t=>t.avgHit.toFixed(1)},{name:"Casts",tooltip:"Casts",getValue:t=>t.casts,getDisplayString:t=>t.casts.toFixed(1)},{name:"Hits",tooltip:"Hits + Crits + Glances + Blocks",getValue:t=>t.landedHits,getDisplayString:t=>t.landedHits.toFixed(1)},{name:"Miss %",tooltip:"Misses / Swings",getValue:t=>t.missPercent,getDisplayString:t=>t.missPercent.toFixed(2)+"%"},{name:"Dodge %",tooltip:"Dodges / Swings",getValue:t=>t.dodgePercent,getDisplayString:t=>t.dodgePercent.toFixed(2)+"%"},{name:"Parry %",tooltip:"Parries / Swings",getValue:t=>t.parryPercent,getDisplayString:t=>t.parryPercent.toFixed(2)+"%"},{name:"Block %",tooltip:"Blocks / Swings",getValue:t=>t.blockPercent,getDisplayString:t=>t.blockPercent.toFixed(2)+"%"},{name:"Crit %",tooltip:"Crits / Swings",getValue:t=>t.critPercent,getDisplayString:t=>t.critPercent.toFixed(2)+"%"}])}getGroupedMetrics(t){const e=t.result.getPlayers(t.filter);if(1!=e.length)return[];e[0];const s=t.result.getTargets(t.filter).map((e=>e.getMeleeActions().map((e=>e.forTarget(t.filter))))).flat();return a.groupById(s)}mergeMetrics(t){return a.merge(t,!0,t[0].unit?.petActionId||void 0)}}({parent:document.body.getElementsByClassName("dtps-melee-metrics")[0],resultsEmitter:U,colorSettings:N});const j=new class extends E{constructor(t){t.rootCssClass="timeline-root",super(t),this.resultData=null,this.rendered=!1,this.hiddenIds=[],this.hiddenIdsChangeEmitter=new e,this.rootElem.innerHTML='\n\t\t<div class="timeline-disclaimer">\n\t\t\t<span class="timeline-warning fa fa-exclamation-triangle"></span>\n\t\t\t<span class="timeline-warning-description">Timeline data visualizes only 1 sim iteration.</span>\n\t\t\t<div class="timeline-run-again-button sim-button">SIM 1 ITERATION</div>\n\t\t\t<select class="timeline-chart-picker">\n\t\t\t\t<option class="rotation-option" value="rotation">Rotation</option>\n\t\t\t\t<option class="dps-option" value="dps">DPS</option>\n\t\t\t\t<option class="threat-option" value="threat">Threat</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class="timeline-plots-container">\n\t\t\t<div class="timeline-plot dps-resources-plot hide"></div>\n\t\t\t<div class="timeline-plot rotation-plot">\n\t\t\t\t<div class="rotation-container">\n\t\t\t\t\t<div class="rotation-labels">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="rotation-timeline">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="rotation-hidden-ids">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t';this.rootElem.getElementsByClassName("timeline-run-again-button")[0].addEventListener("click",(t=>{(window.opener||window.parent).postMessage("runOnce","*")})),this.chartPicker=this.rootElem.getElementsByClassName("timeline-chart-picker")[0],this.chartPicker.addEventListener("change",(t=>{"rotation"==this.chartPicker.value?(this.dpsResourcesPlotElem.classList.add("hide"),this.rotationPlotElem.classList.remove("hide")):(this.dpsResourcesPlotElem.classList.remove("hide"),this.rotationPlotElem.classList.add("hide")),this.updatePlot()})),this.dpsResourcesPlotElem=this.rootElem.getElementsByClassName("dps-resources-plot")[0],this.dpsResourcesPlot=new ApexCharts(this.dpsResourcesPlotElem,{chart:{type:"line",foreColor:"white",id:"dpsResources",animations:{enabled:!1},height:"100%"},series:[],xaxis:{title:{text:"Time (s)"},type:"datetime"},noData:{text:"Waiting for data..."},stroke:{width:2,curve:"straight"}}),this.rotationPlotElem=this.rootElem.getElementsByClassName("rotation-plot")[0],this.rotationLabels=this.rootElem.getElementsByClassName("rotation-labels")[0],this.rotationTimeline=this.rootElem.getElementsByClassName("rotation-timeline")[0],this.rotationHiddenIdsContainer=this.rootElem.getElementsByClassName("rotation-hidden-ids")[0]}onSimResult(t){this.resultData=t,this.rendered&&this.updatePlot()}updatePlot(){if(null==this.resultData)return;const t=this.resultData.result.result.firstIterationDuration||1;let e={series:[],colors:[],xaxis:{min:this.toDatetime(0).getTime(),max:this.toDatetime(t).getTime(),type:"datetime",tickAmount:10,decimalsInFloat:1,labels:{show:!0,formatter:(t,e)=>(e/1e3).toFixed(1)},title:{text:"Time (s)"}},yaxis:[],chart:{events:{beforeResetZoom:()=>({xaxis:{min:this.toDatetime(0),max:this.toDatetime(t)}})}}},s=[];e.tooltip={enabled:!0,custom:t=>{if(s[t.seriesIndex])return s[t.seriesIndex](t.dataPointIndex);throw new Error("No tooltip handler for series "+t.seriesIndex)}};const a=this.resultData.result.getPlayers(this.resultData.filter);if(1==a.length){const n=a[0];this.rootElem.getElementsByClassName("rotation-option")[0].classList.remove("hide");this.rootElem.getElementsByClassName("threat-option")[0].classList.add("hide");try{this.updateRotationChart(n,t)}catch(i){console.log("Failed to update rotation chart: ",i)}const o=this.addDpsSeries(n,e,"");this.addDpsYAxis(o.maxDps,e),s.push(o.tooltipHandler),s.push(this.addManaSeries(n,e)),s.push(this.addThreatSeries(n,e,"")),s=s.filter((t=>null!=t)),this.addMajorCooldownAnnotations(n,e)}else{if("rotation"==this.chartPicker.value)return void(this.chartPicker.value="dps");this.rootElem.getElementsByClassName("rotation-option")[0].classList.add("hide");if(this.rootElem.getElementsByClassName("threat-option")[0].classList.remove("hide"),this.clearRotationChart(),"dps"==this.chartPicker.value){let t=0;a.forEach((a=>{const i=this.addDpsSeries(a,e,a.classColor);t=Math.max(t,i.maxDps),s.push(i.tooltipHandler)})),this.addDpsYAxis(t,e)}else{let t=0;a.forEach((a=>{s.push(this.addThreatSeries(a,e,a.classColor)),t=Math.max(t,a.maxThreat)})),this.addThreatYAxis(t,e)}}this.dpsResourcesPlot.updateOptions(e)}addDpsYAxis(t,e){const s=100*Math.ceil(t/100);e.yaxis.push({color:"#ed5653",seriesName:"DPS",min:0,max:s,tickAmount:10,decimalsInFloat:0,title:{text:"DPS",style:{color:"#ed5653"}},axisBorder:{show:!0,color:"#ed5653"},axisTicks:{color:"#ed5653"},labels:{minWidth:30,style:{colors:["#ed5653"]}}})}addThreatYAxis(t,e){const s=1e4*Math.ceil(t/1e4);e.yaxis.push({color:"#b56d07",seriesName:"Threat",min:0,max:s,tickAmount:10,decimalsInFloat:0,title:{text:"Threat",style:{color:"#b56d07"}},axisBorder:{show:!0,color:"#b56d07"},axisTicks:{color:"#b56d07"},labels:{minWidth:30,style:{colors:["#b56d07"]}}})}addDpsSeries(t,e,s){const a=t.dpsLogs;return e.colors.push(s||"#ed5653"),e.series.push({name:"DPS",type:"line",data:a.map((t=>({x:this.toDatetime(t.timestamp),y:t.dps})))}),{maxDps:a[d(a.map((t=>t.dps)))].dps,tooltipHandler:e=>{const i=a[e];return this.dpsTooltip(i,!0,t,s)}}}addManaSeries(t,e){const s=t.groupedResourceLogs[p.ResourceTypeMana];if(0==s.length)return null;const a=s[0].valueBefore;return e.colors.push("#2E93fA"),e.series.push({name:"Mana",type:"line",data:s.map((t=>({x:this.toDatetime(t.timestamp),y:t.valueAfter})))}),e.yaxis.push({seriesName:"Mana",opposite:!0,min:0,max:a,tickAmount:10,title:{text:"Mana",style:{color:"#2E93fA"}},axisBorder:{show:!0,color:"#2E93fA"},axisTicks:{color:"#2E93fA"},labels:{minWidth:30,style:{colors:["#2E93fA"]},formatter:t=>{const e=parseFloat(t);return`${e.toFixed(0)} (${(e/a*100).toFixed(0)}%)`}}}),t=>{const e=s[t];return this.resourceTooltip(e,a,!0)}}addThreatSeries(t,e,s){return e.colors.push(s||"#b56d07"),e.series.push({name:"Threat",type:"line",data:t.threatLogs.map((t=>({x:this.toDatetime(t.timestamp),y:t.threatAfter})))}),e=>{const a=t.threatLogs[e];return this.threatTooltip(a,!0,t,s)}}addMajorCooldownAnnotations(t,e){const s=t.majorCooldownLogs,a=t.majorCooldownAuraUptimeLogs,i=s.map(((t,e)=>s.filter(((s,a)=>a<e&&s.timestamp>t.timestamp-10)).length)),n=u(a,((t,e)=>t.actionId.equalsIgnoringTag(e.actionId)));n.sort(((t,e)=>g(t.actionId.name,e.actionId.name)));const o=a.map((t=>I[n.findIndex((e=>e.actionId.equalsIgnoringTag(t.actionId)))]));e.annotations={position:"back",xaxis:a.map(((t,e)=>({x:this.toDatetime(t.gainedAt).getTime(),x2:this.toDatetime(t.fadedAt).getTime(),fillColor:o[e]}))),points:s.map(((t,e)=>({x:this.toDatetime(t.timestamp).getTime(),y:0,image:{path:t.actionId.iconUrl,width:20,height:20,offsetY:-25*i[e]}})))}}clearRotationChart(){this.rotationLabels.innerHTML='\n\t\t\t<div class="rotation-label-header"></div>\n\t\t',this.rotationTimeline.innerHTML='\n\t\t\t<div class="rotation-timeline-header">\n\t\t\t\t<canvas class="rotation-timeline-canvas"></canvas>\n\t\t\t</div>\n\t\t',this.rotationHiddenIdsContainer.innerHTML="",this.hiddenIdsChangeEmitter=new e}updateRotationChart(t,e){const s=this.resultData.result.getTargets(this.resultData.filter);if(0==s.length)return;const a=s[0];this.clearRotationChart();try{this.drawRotationTimeRuler(this.rotationTimeline.getElementsByClassName("rotation-timeline-canvas")[0],e)}catch(u){console.log("Failed to draw rotation: ",u)}n.forEach((s=>this.addResourceRow(s,t.groupedResourceLogs[s],e)));const o=Object.values(i(t.auraUptimeLogs,(t=>t.actionId.toString())));o.sort(((t,e)=>g(t[0].actionId.name,e[0].actionId.name)));const l=Object.values(i(a.auraUptimeLogs,(t=>t.actionId.toString())));l.sort(((t,e)=>g(t[0].actionId.name,e[0].actionId.name)));const r=o.concat(l),d=this.getSortedCastsByAbility(t);d.forEach((t=>this.addCastRow(t,r,e)));const c=o.filter((t=>d.findIndex((e=>e[0].actionId.equalsIgnoringTag(t[0].actionId)))));c.length>0&&(this.addSeparatorRow(e),c.forEach((t=>this.addAuraRow(t,e))));const m=this.getSortedCastsByAbility(a);m.length>0&&(this.addSeparatorRow(e),m.forEach((t=>this.addCastRow(t,r,e))));const p=l;p.length>0&&(this.addSeparatorRow(e),p.forEach((t=>this.addAuraRow(t,e))))}getSortedCastsByAbility(t){const e=t.getMeleeActions().map((t=>t.actionId)),s=t.getSpellActions().map((t=>t.actionId)),a=t=>{const a=R[t.anyId()];return null!=a?a:e.find((e=>e.equals(t)))?A:s.find((e=>e.equals(t)))?k:M},n=Object.values(i(t.castLogs,(t=>B.includes(t.actionId.spellId)?t.actionId.toStringIgnoringTag():t.actionId.toString())));return n.sort(((t,e)=>{const s=a(t[0].actionId),i=a(e[0].actionId);return s!=i?s-i:t[0].actionId.anyId()==e[0].actionId.anyId()?t[0].actionId.tag-e[0].actionId.tag:g(t[0].actionId.name,e[0].actionId.name)})),n}makeLabelElem(t,s){const a=document.createElement("div");a.classList.add("rotation-label","rotation-row"),s&&a.classList.add("rotation-label-hidden");const i=B.includes(t.spellId)?t.baseName:t.name;a.innerHTML=`\n\t\t\t<span class="fas fa-eye${s?"":"-slash"}"></span>\n\t\t\t<a class="rotation-label-icon"></a>\n\t\t\t<span class="rotation-label-text">${i}</span>\n\t\t`;const n=a.getElementsByClassName("fas")[0];n.addEventListener("click",(a=>{if(s){const e=this.hiddenIds.findIndex((e=>e.equals(t)));-1!=e&&this.hiddenIds.splice(e,1)}else this.hiddenIds.push(t);this.hiddenIdsChangeEmitter.emit(e.nextEventID())})),tippy(n,{content:s?"Show Row":"Hide Row",allowHTML:!0});const o=()=>{s==Boolean(this.hiddenIds.find((e=>e.equals(t))))?a.classList.remove("hide"):a.classList.add("hide")};this.hiddenIdsChangeEmitter.on(o),o();const l=a.getElementsByClassName("rotation-label-icon")[0];return t.setBackgroundAndHref(l),a}makeRowElem(t,e){const s=document.createElement("div");s.classList.add("rotation-timeline-row","rotation-row"),s.style.width=this.timeToPx(e);const a=()=>{this.hiddenIds.find((e=>e.equals(t)))?s.classList.add("hide"):s.classList.remove("hide")};return this.hiddenIdsChangeEmitter.on(a),a(),s}addSeparatorRow(t){let e=document.createElement("div");e.classList.add("rotation-timeline-separator"),this.rotationLabels.appendChild(e),e=document.createElement("div"),e.classList.add("rotation-timeline-separator"),e.style.width=this.timeToPx(t),this.rotationTimeline.appendChild(e)}addResourceRow(t,e,s){if(0==e.length)return;const a=e[0].valueBefore,i=document.createElement("div");i.classList.add("rotation-label","rotation-row"),i.innerHTML=`\n\t\t\t<a class="rotation-label-icon" style="background-image:url('${h[t]}')"></a>\n\t\t\t<span class="rotation-label-text">${o[t]}</span>\n\t\t`,this.rotationLabels.appendChild(i);const n=document.createElement("div");n.classList.add("rotation-timeline-row","rotation-row"),n.style.width=this.timeToPx(s),e.forEach(((i,l)=>{const r=document.createElement("div");r.classList.add("rotation-timeline-resource","series-color",o[t].toLowerCase().replaceAll(" ","-")),r.style.left=this.timeToPx(i.timestamp),r.style.width=this.timeToPx((e[l+1]?.timestamp||s)-i.timestamp),V.includes(t)?r.textContent=(i.valueAfter/a*100).toFixed(0)+"%":r.textContent=Math.floor(i.valueAfter).toFixed(0),n.appendChild(r),tippy(r,{content:this.resourceTooltip(i,a,!1),allowHTML:!0,placement:"bottom"})})),this.rotationTimeline.appendChild(n)}addCastRow(t,e,s){const a=t[0].actionId;this.rotationLabels.appendChild(this.makeLabelElem(a,!1)),this.rotationHiddenIdsContainer.appendChild(this.makeLabelElem(a,!0));const i=this.makeRowElem(a,s);t.forEach((t=>{const e=document.createElement("div");if(e.classList.add("rotation-timeline-cast"),e.style.left=this.timeToPx(t.timestamp),e.style.minWidth=this.timeToPx(t.castTime+t.travelTime),i.appendChild(e),0!=t.travelTime){const s=document.createElement("div");s.classList.add("rotation-timeline-travel-time"),s.style.left=this.timeToPx(t.castTime),s.style.minWidth=this.timeToPx(t.travelTime),e.appendChild(s)}if(t.damageDealtLogs.length>0){const s=t.damageDealtLogs[0];s.miss||s.dodge||s.parry?e.classList.add("outcome-miss"):s.glance||s.block||s.partialResist1_4||s.partialResist2_4||s.partialResist3_4?e.classList.add("outcome-partial"):s.crit?e.classList.add("outcome-crit"):e.classList.add("outcome-hit")}const s=document.createElement("a");s.classList.add("rotation-timeline-cast-icon"),a.setBackground(s),e.appendChild(s);const n=0==t.travelTime?"":` + ${t.travelTime.toFixed(2)}s travel time`;tippy(e,{content:`\n\t\t\t\t\t<span>${t.actionId.name} from ${t.timestamp.toFixed(2)}s to ${(t.timestamp+t.castTime).toFixed(2)}s (${t.castTime.toFixed(2)}s)${n}</span>\n\t\t\t\t\t<ul class="rotation-timeline-cast-damage-list">\n\t\t\t\t\t\t${t.damageDealtLogs.map((t=>`\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<span>${t.timestamp.toFixed(2)}s - ${t.resultString()}</span>\n\t\t\t\t\t\t\t\t\t${t.source?.isTarget?"":`<span class="threat-metrics"> (${t.threat.toFixed(1)} Threat)</span>`}\n\t\t\t\t\t\t\t\t</li>`)).join("")}\n\t\t\t\t\t</ul>\n\t\t\t\t`,allowHTML:!0,placement:"bottom"}),t.damageDealtLogs.filter((t=>t.tick)).forEach((t=>{const e=document.createElement("div");e.classList.add("rotation-timeline-tick"),e.style.left=this.timeToPx(t.timestamp),i.appendChild(e),tippy(e,{content:`\n\t\t\t\t\t\t<span>${t.timestamp.toFixed(2)}s - ${t.actionId.name} ${t.resultString()}</span>\n\t\t\t\t\t\t${t.source?.isTarget?"":`<span class="threat-metrics"> (${t.threat.toFixed(1)} Threat)</span>`}\n\t\t\t\t\t`,allowHTML:!0,placement:"bottom"})}))})),e.filter((t=>t[0].actionId.equalsIgnoringTag(a))).forEach((t=>this.applyAuraUptimeLogsToRow(t,i,s))),this.rotationTimeline.appendChild(i)}addAuraRow(t,e){const s=t[0].actionId;let a=this.makeRowElem(s,e);this.rotationLabels.appendChild(this.makeLabelElem(s,!1)),this.rotationHiddenIdsContainer.appendChild(this.makeLabelElem(s,!0)),this.rotationTimeline.appendChild(a),this.applyAuraUptimeLogsToRow(t,a,e)}applyAuraUptimeLogsToRow(t,e,s){t.forEach((t=>{const a=document.createElement("div");a.classList.add("rotation-timeline-aura"),a.style.left=this.timeToPx(t.gainedAt),a.style.minWidth=this.timeToPx((t.fadedAt||s)-t.gainedAt),e.appendChild(a),tippy(a,{content:`\n\t\t\t\t\t<span>${t.actionId.name}: ${t.gainedAt.toFixed(2)}s - ${(t.fadedAt||s).toFixed(2)}s</span>\n\t\t\t\t`,allowHTML:!0}),t.stacksChange.forEach(((e,s)=>{if(e.timestamp==t.fadedAt)return;const i=document.createElement("div");i.classList.add("rotation-timeline-stacks-change"),i.style.left=this.timeToPx(e.timestamp-t.timestamp),i.style.width=this.timeToPx(t.stacksChange[s+1]?t.stacksChange[s+1].timestamp-e.timestamp:t.fadedAt-e.timestamp),i.textContent=String(e.newStacks),a.appendChild(i)}))}))}timeToPxValue(t){return 100*t}timeToPx(t){return this.timeToPxValue(t)+"px"}drawRotationTimeRuler(t,e){const s=30;t.width=this.timeToPxValue(e),t.height=s;const a=t.getContext("2d");a.strokeStyle="white",a.font="bold 14px SimDefaultFont",a.fillStyle="white",a.lineWidth=2,a.beginPath(),a.moveTo(0,s),a.lineTo(t.width,s);const i=1+Math.floor(10*e);for(let n=0;n<=i;n++){const t=.1*n;let i=this.timeToPxValue(t);0==n?(a.textAlign="left",i++):n%10==0&&t+1>e?(a.textAlign="right",i--):a.textAlign="center";let o=0;n%10==0?(o=15,a.fillText(t+"s",i,12)):o=n%5==0?7.5:3.75,a.moveTo(i,s),a.lineTo(i,s-o)}a.stroke()}dpsTooltip(t,e,s,a){return`<div class="timeline-tooltip dps">\n\t\t\t<div class="timeline-tooltip-header">\n\t\t\t\t${""!=a?`\n\t\t\t\t<img class="timeline-tooltip-icon" src="${s.iconUrl}">\n\t\t\t\t<span class="" style="color: ${a}">${s.label}</span><span> - </span>\n\t\t\t\t`:""}\n\t\t\t\t<span class="bold">${t.timestamp.toFixed(2)}s</span>\n\t\t\t</div>\n\t\t\t<div class="timeline-tooltip-body">\n\t\t\t\t<ul class="timeline-dps-events">\n\t\t\t\t\t${t.damageLogs.map((t=>this.tooltipLogItem(t,t.resultString()))).join("")}\n\t\t\t\t</ul>\n\t\t\t\t<div class="timeline-tooltip-body-row">\n\t\t\t\t\t<span class="series-color">DPS: ${t.dps.toFixed(2)}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t${this.tooltipAurasSection(t)}\n\t\t</div>`}threatTooltip(t,e,s,a){return`<div class="timeline-tooltip threat">\n\t\t\t<div class="timeline-tooltip-header">\n\t\t\t\t${""!=a?`\n\t\t\t\t<img class="timeline-tooltip-icon" src="${s.iconUrl}">\n\t\t\t\t<span class="" style="color: ${a}">${s.label}</span></span> - </span>\n\t\t\t\t`:""}\n\t\t\t\t<span class="bold">${t.timestamp.toFixed(2)}s</span>\n\t\t\t</div>\n\t\t\t<div class="timeline-tooltip-body">\n\t\t\t\t<div class="timeline-tooltip-body-row">\n\t\t\t\t\t<span class="series-color">Before: ${t.threatBefore.toFixed(1)}</span>\n\t\t\t\t</div>\n\t\t\t\t<ul class="timeline-threat-events">\n\t\t\t\t\t${t.logs.map((t=>this.tooltipLogItem(t,`${t.threat.toFixed(1)} Threat`))).join("")}\n\t\t\t\t</ul>\n\t\t\t\t<div class="timeline-tooltip-body-row">\n\t\t\t\t\t<span class="series-color">After: ${t.threatAfter.toFixed(1)}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t${e?this.tooltipAurasSection(t):""}\n\t\t</div>`}resourceTooltip(t,e,s){const a=V.includes(t.resourceType)?t=>`${t.toFixed(1)} (${(t/e*100).toFixed(0)}%)`:t=>`${t.toFixed(1)}`;return`<div class="timeline-tooltip ${o[t.resourceType].toLowerCase().replaceAll(" ","-")}">\n\t\t\t<div class="timeline-tooltip-header">\n\t\t\t\t<span class="bold">${t.timestamp.toFixed(2)}s</span>\n\t\t\t</div>\n\t\t\t<div class="timeline-tooltip-body">\n\t\t\t\t<div class="timeline-tooltip-body-row">\n\t\t\t\t\t<span class="series-color">Before: ${a(t.valueBefore)}</span>\n\t\t\t\t</div>\n\t\t\t\t<ul class="timeline-mana-events">\n\t\t\t\t\t${t.logs.map((t=>this.tooltipLogItem(t,t.resultString()))).join("")}\n\t\t\t\t</ul>\n\t\t\t\t<div class="timeline-tooltip-body-row">\n\t\t\t\t\t<span class="series-color">After: ${a(t.valueAfter)}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t${s?this.tooltipAurasSection(t):""}\n\t\t</div>`}tooltipLogItem(t,e){const s=`<span class="series-color">${e}</span>`;let a="";if(t.actionId){let e="";t.actionId.iconUrl&&(e=`<img class="timeline-tooltip-icon" src="${t.actionId.iconUrl}">`),a=`\n\t\t\t${e}\n\t\t\t<span>${t.actionId.name}:</span>\n\t\t\t`}return`\n\t\t<li>\n\t\t\t${a}\n\t\t\t${s}\n\t\t</li>`}tooltipAurasSection(t){return 0==t.activeAuras.length?"":`\n\t\t<div class="timeline-tooltip-auras">\n\t\t\t<div class="timeline-tooltip-body-row">\n\t\t\t\t<span class="bold">Active Auras</span>\n\t\t\t</div>\n\t\t\t<ul class="timeline-active-auras">\n\t\t\t\t${t.activeAuras.map((t=>{let e="";return t.actionId.iconUrl&&(e=`<img class="timeline-tooltip-icon" src="${t.actionId.iconUrl}">`),`\n\t\t\t\t\t<li>\n\t\t\t\t\t\t${e}\n\t\t\t\t\t\t<span>${t.actionId.name}</span>\n\t\t\t\t\t</li>`})).join("")}\n\t\t\t</ul>\n\t\t</div>\n\t\t`}render(){setTimeout((()=>{this.dpsResourcesPlot.render(),this.rendered=!0,this.updatePlot()}),300)}toDatetime(t){return new Date(1e3*t)}}({parent:document.body.getElementsByClassName("timeline")[0],resultsEmitter:U,colorSettings:N});document.getElementById("timelineTabTab").addEventListener("click",(t=>j.render()));let W=null;function q(){const t=e.nextEventID();null==W?U.emit(t,null):U.emit(t,{eventID:t,result:W,filter:O.getFilter()})}document.body.classList.add("hide-threat-metrics"),window.addEventListener("message",(async t=>{const e=f.fromJson(t.data);switch(e.data.oneofKind){case"runData":const t=e.data.runData;W=await C.fromProto(t.run||b.create()),q();break;case"settings":const s=e.data.settings;s.showThreatMetrics?document.body.classList.remove("hide-threat-metrics"):document.body.classList.add("hide-threat-metrics"),s.showExperimental?document.body.classList.remove("hide-experimental"):document.body.classList.add("hide-experimental")}})),O.changeEmitter.on((()=>q()));const Y=document.body.getElementsByClassName("dr-root")[0];U.on(((t,e)=>{e?.filter.player||0===e?.filter.player?(Y.classList.remove("all-players"),Y.classList.add("single-player")):(Y.classList.add("all-players"),Y.classList.remove("single-player"))}));
//# sourceMappingURL=index-e0343653.entry.js.map
