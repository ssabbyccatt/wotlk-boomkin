{"version":3,"file":"index-90039335.entry.js","sources":["../../../ui/tank_deathknight/inputs.ts","../../../ui/tank_deathknight/presets.ts","../../../ui/tank_deathknight/index.ts","../../../ui/tank_deathknight/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\n\n\n\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const StartingRunicPower = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecTankDeathknight>({\n\tfieldName: 'startingRunicPower',\n\tlabel: 'Starting Runic Power',\n\tlabelTooltip: 'Initial RP at the start of each iteration.',\n});\n\nexport const DeathKnightRotationConfig = {\n\tinputs: [\n\t],\n};\n","import { Consumes } from '../core/proto/common.js';\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tTankDeathknight_Rotation as TankDeathKnightRotation,\n\tTankDeathknight_Options as TankDeathKnightOptions,\n\tDeathknightMajorGlyph,\n\tDeathknightMinorGlyph,\n} from '../core/proto/deathknight.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wotlk.wowhead.com/talent-calc and copy the numbers in the url.\nexport const BloodTalents = {\n\tname: 'Balanced',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '005510153330330220102013-3050505100023101-002',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDisease,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfVampiricBlood,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\n\nexport const DefaultRotation = TankDeathKnightRotation.create({\n});\n\nexport const DefaultOptions = TankDeathKnightOptions.create({\n\tstartingRunicPower: 0,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfStoneblood,\n\tfood: Food.FoodDragonfinFilet,\n\tdefaultPotion: Potions.IndestructiblePotion,\n\tprepopPotion:  Potions.IndestructiblePotion,\n});\n\nexport const P1_BLOOD_BIS_PRESET = {\n\tname: 'P1 BiS Blood',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n    {\n      \"id\": 40565,\n      \"enchant\": 67839,\n      \"gems\": [\n        41380,\n        36767\n      ]\n    },\n    {\n      \"id\": 40387\n    },\n    {\n      \"id\": 39704,\n      \"enchant\": 44957,\n      \"gems\": [\n        40008\n      ]\n    },\n    {\n      \"id\": 40252,\n      \"enchant\": 55002\n    },\n    {\n      \"id\": 40559,\n      \"gems\": [\n        40008,\n        40022\n      ]\n    },\n    {\n      \"id\": 40306,\n      \"enchant\": 44944,\n      \"gems\": [\n        40008,\n        0\n      ]\n    },\n    {\n      \"id\": 40563,\n      \"enchant\": 63770,\n      \"gems\": [\n        40008,\n        0\n      ]\n    },\n    {\n      \"id\": 39759,\n      \"gems\": [\n        40008,\n        0\n      ]\n    },\n    {\n      \"id\": 40567,\n      \"enchant\": 38373,\n      \"gems\": [\n        40008,\n        40008\n      ]\n    },\n    {\n      \"id\": 40297,\n      \"enchant\": 44491\n    },\n    {\n      \"id\": 40718\n    },\n    {\n      \"id\": 40107\n    },\n    {\n      \"id\": 44063,\n      \"gems\": [\n        40008,\n        40008\n      ]\n    },\n    {\n      \"id\": 42341,\n      \"gems\": [\n        40008,\n        40008\n      ]\n    },\n    {\n      \"id\": 40406,\n      \"enchant\": 62158\n    },\n    {},\n    {\n      \"id\": 40207\n    }\n  ]}`),\n};\n","import { Spec } from '../core/proto/common.js';\nimport { Sim } from '../core/sim.js';\nimport { Player } from '../core/player.js';\nimport { TypedEvent } from '../core/typed_event.js';\n\nimport { TankDeathknightSimUI } from './sim.js';\n\nconst sim = new Sim();\nconst player = new Player<Spec.SpecTankDeathknight>(Spec.SpecTankDeathknight, sim);\nsim.raid.setPlayer(TypedEvent.nextEventID(), 0, player);\n\nconst simUI = new TankDeathknightSimUI(document.body, player);\n","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Class } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\nimport { Encounter } from '../core/proto/common.js';\nimport { ItemSlot } from '../core/proto/common.js';\nimport { MobType } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { TotemsSection } from '../core/components/totem_inputs.js';\n\nimport { TankDeathknight, TankDeathknight_Rotation as DeathKnightRotation, DeathknightTalents as DeathKnightTalents, TankDeathknight_Options as DeathKnightOptions } from '../core/proto/deathknight.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Tooltips from '../core/constants/tooltips.js';\n\nimport * as DeathKnightInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class TankDeathknightSimUI extends IndividualSimUI<Spec.SpecTankDeathknight> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecTankDeathknight>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'tank-deathknight-sim-ui',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t\t\"<p>Completely unfinished.</p>\"\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatExpertise,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmor,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatDefense,\n\t\t\t\tStat.StatDodge,\n\t\t\t\tStat.StatParry,\n\t\t\t\tStat.StatResilience,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatAttackPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatArmor,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatExpertise,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatDefense,\n\t\t\t\tStat.StatDodge,\n\t\t\t\tStat.StatParry,\n\t\t\t\tStat.StatResilience,\n\t\t\t],\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P1_BLOOD_BIS_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatArmor]: 0.05,\n\t\t\t\t\t[Stat.StatStamina]: 1,\n\t\t\t\t\t[Stat.StatStrength]: 0.33,\n\t\t\t\t\t[Stat.StatAgility]: 0.6,\n\t\t\t\t\t[Stat.StatAttackPower]: 0.06,\n\t\t\t\t\t[Stat.StatExpertise]: 0.67,\n\t\t\t\t\t[Stat.StatMeleeHit]: 0.67,\n\t\t\t\t\t[Stat.StatMeleeCrit]: 0.28,\n\t\t\t\t\t[Stat.StatMeleeHaste]: 0.21,\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.19,\n\t\t\t\t\t[Stat.StatBlock]: 0.35,\n\t\t\t\t\t[Stat.StatBlockValue]: 0.59,\n\t\t\t\t\t[Stat.StatDodge]: 0.7,\n\t\t\t\t\t[Stat.StatParry]: 0.58,\n\t\t\t\t\t[Stat.StatDefense]: 0.8,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.BloodTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tretributionAura: true,\n\t\t\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved, \n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tswiftRetribution: true,\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t\ticyTalons: true,\n\t\t\t\t\tabominationsMight: true,\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\n\t\t\t\t\tsanctifiedRetribution: true,\n\t\t\t\t\tbloodlust: true,\n\t\t\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tstoneskinTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tblessingOfSanctuary: true,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tbloodFrenzy: true,\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectRegular,\n\t\t\t\t\tsunderArmor: true,\n\t\t\t\t\tmisery: true,\n\t\t\t\t\tebonPlaguebringer: true,\n\t\t\t\t\tmangle: true,\n\t\t\t\t\theartOfTheCrusader: true,\n\t\t\t\t\tdemoralizingShout: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tfrostFever: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tinsectSwarm: true,\n\t\t\t\t\tjudgementOfLight: true,\n\t\t\t\t}),\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: DeathKnightInputs.DeathKnightRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.BloodTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.P1_BLOOD_BIS_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["InputHelpers.makeSpecOptionsNumberInput","fieldName","label","labelTooltip","DeathKnightRotationConfig","inputs","BloodTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","DeathknightMajorGlyph","GlyphOfDisease","major2","GlyphOfVampiricBlood","major3","GlyphOfDarkCommand","minor1","DeathknightMinorGlyph","GlyphOfHornOfWinter","minor2","GlyphOfBloodTap","minor3","GlyphOfRaiseDead","DefaultRotation","TankDeathKnightRotation","DefaultOptions","TankDeathKnightOptions","startingRunicPower","DefaultConsumes","Consumes","flask","Flask","FlaskOfStoneblood","food","Food","FoodDragonfinFilet","defaultPotion","Potions","IndestructiblePotion","prepopPotion","P1_BLOOD_BIS_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","sim","Sim","player","Player","Spec","SpecTankDeathknight","raid","setPlayer","TypedEvent","nextEventID","IndividualSimUI","constructor","parentElem","super","cssClass","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmor","StatArmorPenetration","StatDefense","StatDodge","StatParry","StatResilience","StatSpellHit","epReferenceStat","displayStats","StatHealth","defaults","Presets.P1_BLOOD_BIS_PRESET","epWeights","Stats","fromMap","StatBlock","StatBlockValue","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","talents","Presets.BloodTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","retributionAura","powerWordFortitude","TristateEffect","TristateEffectImproved","giftOfTheWild","swiftRetribution","strengthOfEarthTotem","icyTalons","abominationsMight","leaderOfThePack","TristateEffectRegular","sanctifiedRetribution","bloodlust","devotionAura","stoneskinTotem","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","blessingOfSanctuary","debuffs","Debuffs","bloodFrenzy","faerieFire","sunderArmor","misery","ebonPlaguebringer","mangle","heartOfTheCrusader","demoralizingShout","frostFever","insectSwarm","judgementOfLight","playerIconInputs","rotationInputs","DeathKnightInputs.DeathKnightRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","document","body"],"mappings":"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"}