import{A as n,c3 as e,c4 as t,bF as a,_ as i,z as l,B as s,c5 as o,c6 as r,c7 as d,c8 as m,c9 as c,ca as h,cb as u,Z as p,bv as g,bq as f,bt as S,E as b,T as y,k as v,b as T,ao as w,aO as M,am as P,Y as O,ap as C}from"./raid_sim_action-a61fd70b.chunk.js";import{m as W,j as N,a as I,d as R,e as k,B as F,I as L,k as A,l as B,T as E}from"./individual_sim_ui-2f0e86c1.chunk.js";import{T as j}from"./totem_inputs-eec6567e.chunk.js";const D=W({fieldName:"bloodlust",id:n.fromSpellId(2825)}),G=N({fieldName:"shield",values:[{color:"grey",value:e.NoShield},{actionId:n.fromSpellId(57960),value:e.WaterShield},{actionId:n.fromSpellId(49281),value:e.LightningShield}]}),H={inputs:[I({fieldName:"type",label:"Type",values:[{name:"Adaptive",value:t.Adaptive,tooltip:"Dynamically adapts based on available mana to maximize CL casts without going OOM."},{name:"Manual",value:t.Manual,tooltip:"Allows custom selection of which spells to use and to modify cast conditions."}]}),R({fieldName:"inThunderstormRange",label:"In Thunderstorm Range",labelTooltip:"Thunderstorm will hit all targets when cast. Ignores knockback.",enableWhen:n=>n.getTalents().thunderstorm}),R({fieldName:"useChainLightning",label:"Use Chain Lightning in Rotation",labelTooltip:"Use Chain Lightning in rotation",enableWhen:n=>n.getRotation().type==t.Manual}),R({fieldName:"useClOnlyGap",label:"Use CL only as gap filler",labelTooltip:"Use CL to fill short gaps in LvB CD instead of on CD.",enableWhen:n=>n.getRotation().type==t.Manual&&n.getRotation().useChainLightning}),k({fieldName:"clMinManaPer",label:"Min mana percent to use Chain Lightning",labelTooltip:"Customize minimum mana level to cast Chain Lightning. 0 will spam until OOM.",enableWhen:n=>n.getRotation().type==t.Manual&&n.getRotation().useChainLightning}),R({fieldName:"useFireNova",label:"Use Fire Nova in Rotation",labelTooltip:"Fire Nova will hit all targets when cast.",enableWhen:n=>n.getRotation().type==t.Manual}),k({fieldName:"fnMinManaPer",label:"Min mana percent to use FireNova",labelTooltip:"Customize minimum mana level to cast Fire Nova. 0 will spam until OOM.",enableWhen:n=>n.getRotation().type==t.Manual&&n.getRotation().useFireNova}),R({fieldName:"overwriteFlameshock",label:"Allow Flameshock to be overwritten",labelTooltip:"Will use flameshock at the end of the duration even if its still ticking if there isn't enough time to cast lavaburst before expiring.",enableWhen:n=>n.getRotation().type==t.Manual}),R({fieldName:"alwaysCritLvb",label:"Only cast Lavaburst with FS",labelTooltip:"Will only cast Lavaburst if Flameshock will be active when the cast finishes.",enableWhen:n=>n.getRotation().type==t.Manual}),R({fieldName:"useThunderstorm",label:"Allow Thunderstorm to be cast.",labelTooltip:"Disabling this will stop thunderstorm from being cast entirely.",enableWhen:n=>n.getRotation().type==t.Manual})]},x={name:"Standard",data:a.create({talentsString:"0532001523212351322301351-005052031",glyphs:i.create({major1:l.GlyphOfLava,major2:l.GlyphOfTotemOfWrath,major3:l.GlyphOfLightningBolt,minor1:s.GlyphOfThunderstorm,minor2:s.GlyphOfWaterShield,minor3:s.GlyphOfGhostWolf})})},_=o.create({totems:r.create({earth:d.StrengthOfEarthTotem,air:m.WrathOfAirTotem,fire:c.TotemOfWrath,water:h.ManaSpringTotem}),type:t.Adaptive,fnMinManaPer:66,clMinManaPer:33,useChainLightning:!1,useFireNova:!1,useThunderstorm:!0}),U=u.create({shield:e.WaterShield,bloodlust:!0}),z=p.create({defaultPotion:g.RunicManaPotion,flask:f.FlaskOfTheFrostWyrm,food:S.FoodFishFeast}),J={name:"SWP Pre-Raid Preset",tooltip:"Pre-raid preset that includes some gear from SWP.",gear:b.fromJsonString('{\n    "items": [\n      {\n        "id": 34332,\n        "enchant": 44877,\n        "gems": [\n          40049,\n          41285\n        ]\n      },\n      {\n        "id": 37595\n      },\n      {\n        "id": 31023,\n        "enchant": 44874,\n        "gems": [\n          42144,\n          40049\n        ]\n      },\n      {\n        "id": 41610,\n        "enchant": 55642\n      },\n      {\n        "id": 39592,\n        "enchant": 44489,\n        "gems": [\n          42144,\n          40025\n        ]\n      },\n      {\n        "id": 34437,\n        "enchant": 44498,\n        "gems": [\n          40049,\n          0\n        ]\n      },\n      {\n        "id": 34344,\n        "enchant": 44592,\n        "gems": [\n          40049,\n          42144,\n          0\n        ]\n      },\n      {\n        "id": 34542,\n        "gems": [\n          40049,\n          39998\n        ]\n      },\n      {\n        "id": 37791,\n        "enchant": 41602\n      },\n      {\n        "id": 34566,\n        "enchant": 60623,\n        "gems": [\n          40049\n        ]\n      },\n      {\n        "id": 43253,\n        "gems": [\n          40027\n        ]\n      },\n      {\n        "id": 37694\n      },\n      {\n        "id": 40682\n      },\n      {\n        "id": 37873\n      },\n      {\n        "id": 41384,\n        "enchant": 44487\n      },\n      {\n        "id": 40698\n      },\n      {\n        "id": 32330\n      }\n    ]\n  }')},q={name:"Pre-raid Preset",tooltip:F,gear:b.fromJsonString('{\n    "items": [\n      {\n        "id": 37180,\n        "enchant": 44877,\n        "gems": [\n          41285,\n          42144\n        ]\n      },\n      {\n        "id": 37595\n      },\n      {\n        "id": 37673,\n        "enchant": 44874,\n        "gems": [\n          42144\n        ]\n      },\n      {\n        "id": 41610,\n        "enchant": 55642\n      },\n      {\n        "id": 39592,\n        "enchant": 44489,\n        "gems": [\n          42144,\n          40025\n        ]\n      },\n      {\n        "id": 37788,\n        "enchant": 44498,\n        "gems": [\n          0\n        ]\n      },\n      {\n        "id": 39593,\n        "enchant": 44592,\n        "gems": [\n          40051,\n          0\n        ]\n      },\n      {\n        "id": 40696,\n        "gems": [\n          40049,\n          39998\n        ]\n      },\n      {\n        "id": 37791,\n        "enchant": 41602\n      },\n      {\n        "id": 44202,\n        "enchant": 60623,\n        "gems": [\n          39998\n        ]\n      },\n      {\n        "id": 43253,\n        "gems": [\n          40027\n        ]\n      },\n      {\n        "id": 37694\n      },\n      {\n        "id": 40682\n      },\n      {\n        "id": 37873\n      },\n      {\n        "id": 41384,\n        "enchant": 44487\n      },\n      {\n        "id": 40698\n      },\n      {\n        "id": 40708\n      }\n    ]\n  }')},K={name:"P1 Preset",tooltip:F,gear:b.fromJsonString('{\n    "items": [\n      {\n        "id": 40516,\n        "enchant": 44877,\n        "gems": [\n          41285,\n          40027\n        ]\n      },\n      {\n        "id": 44661,\n        "gems": [\n          39998\n        ]\n      },\n      {\n        "id": 40286,\n        "enchant": 44874\n      },\n      {\n        "id": 44005,\n        "enchant": 55642,\n        "gems": [\n          40027\n        ]\n      },\n      {\n        "id": 40514,\n        "enchant": 44489,\n        "gems": [\n          42144,\n          42144\n        ]\n      },\n      {\n        "id": 40324,\n        "enchant": 44498,\n        "gems": [\n          42144,\n          0\n        ]\n      },\n      {\n        "id": 40302,\n        "enchant": 44592,\n        "gems": [\n          0\n        ]\n      },\n      {\n        "id": 40301,\n        "gems": [\n          40014\n        ]\n      },\n      {\n        "id": 40560,\n        "enchant": 41604\n      },\n      {\n        "id": 40519,\n        "enchant": 60623\n      },\n      {\n        "id": 37694\n      },\n      {\n        "id": 40399\n      },\n      {\n        "id": 40432\n      },\n      {\n        "id": 40255\n      },\n      {\n        "id": 40395,\n        "enchant": 44487\n      },\n      {\n        "id": 40401,\n        "enchant": 60653\n      },\n      {\n        "id": 40267\n      }\n    ]\n  }')};class Y extends L{constructor(n,e){super(n,e,{cssClass:"elemental-shaman-sim-ui",knownIssues:[],warnings:[n=>({updateOn:y.onAny([n.player.rotationChangeEmitter,n.player.currentStatsEmitter]),getContent:()=>{const e=n.player.getCurrentStats().sets.includes("Skyshatter Regalia (2pc)"),t=n.player.getRotation().totems,a=t&&t.earth&&t.air&&t.fire&&t.water;return e&&!a?"T6 2pc bonus is equipped, but inactive because not all 4 totem types are being used.":""}})],epStats:[v.StatIntellect,v.StatSpellPower,v.StatNatureSpellPower,v.StatSpellHit,v.StatSpellCrit,v.StatSpellHaste,v.StatMP5],epReferenceStat:v.StatSpellPower,displayStats:[v.StatHealth,v.StatMana,v.StatStamina,v.StatIntellect,v.StatSpellPower,v.StatNatureSpellPower,v.StatSpellHit,v.StatSpellCrit,v.StatSpellHaste,v.StatMP5],modifyDisplayStats:n=>{let e=new T;return e=e.addStat(v.StatSpellHit,n.getTalents().elementalPrecision*A),e=e.addStat(v.StatSpellCrit,1*n.getTalents().tidalMastery*B),{talents:e}},defaults:{gear:K.gear,epWeights:T.fromMap({[v.StatIntellect]:.17,[v.StatSpellPower]:1,[v.StatNatureSpellPower]:1,[v.StatSpellCrit]:1,[v.StatSpellHaste]:1,[v.StatMP5]:.08}),consumes:z,rotation:_,talents:x.data,specOptions:U,raidBuffs:w.create({arcaneBrilliance:!0,divineSpirit:!0,giftOfTheWild:M.TristateEffectImproved,moonkinAura:M.TristateEffectImproved,sanctifiedRetribution:!0}),partyBuffs:P.create({}),individualBuffs:O.create({blessingOfKings:!0,blessingOfWisdom:2,vampiricTouch:!0}),debuffs:C.create({faerieFire:M.TristateEffectImproved,judgementOfWisdom:!0,misery:!0,curseOfElements:!0,shadowMastery:!0})},playerIconInputs:[G,D],rotationInputs:H,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[E]},customSections:[j],encounterPicker:{showExecuteProportion:!1},presets:{talents:[x],gear:[J,q,K]}})}}export{_ as D,Y as E,K as P,x as S,U as a,z as b};
//# sourceMappingURL=sim-ea4d6d8b.chunk.js.map
