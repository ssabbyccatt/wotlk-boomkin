import{bK as n,T as e,bL as t,bM as a,bN as i,bO as o,bP as s,bF as r,_ as l,L as h,N as m,bQ as d,bR as g,Z as c,bq as p,bt as f,bv as u,bp as y,bu as b,E as S,k as T,b as D,ao as O,aO as P,am as E,Y as A,ap as G}from"./raid_sim_action-a61fd70b.chunk.js";import{c as w,b as B,d as W,e as C,a as R,B as v,I as F,f as H,g as M,h as k,A as U,D as N,M as j,T as I,i as z}from"./individual_sim_ui-2f0e86c1.chunk.js";const x=w({fieldName:"startingRunicPower",label:"Starting Runic Power",labelTooltip:"Initial RP at the start of each iteration."}),J=w({fieldName:"petUptime",label:"Ghoul Uptime (%)",labelTooltip:"Percent of the fight duration for which your ghoul will be on target.",percent:!0}),_=B({fieldName:"precastGhoulFrenzy",label:"Pre-Cast Ghoul Frenzy",labelTooltip:"Cast Ghoul Frenzy 10 seconds before combat starts.",showWhen:n=>n.getTalents().summonGargoyle&&n.getTalents().ghoulFrenzy,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),L=B({fieldName:"precastHornOfWinter",label:"Pre-Cast Horn of Winter",labelTooltip:"Precast Horn of Winter for 10 extra runic power before fight."});W({fieldName:"refreshHornOfWinter",label:"Refresh Horn of Winter",labelTooltip:"Refresh Horn of Winter on free GCDs."}),C({fieldName:"diseaseRefreshDuration",label:"Disease Refresh Duration",labelTooltip:"Minimum duration for refreshing a disease."});const K=W({fieldName:"useDeathAndDecay",label:"Death and Decay",labelTooltip:"Use Death and Decay based rotation.",showWhen:n=>n.getTalents().summonGargoyle&&n.getTalents().scourgeStrike,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])});R({fieldName:"deathAndDecayPrio",label:"Death and Decay Prio",labelTooltip:"<p>Chose how to prioritize death and decay usage:</p>\t\t<p><b>Max Rune Downtime</b>: Prioritizes spending runes over holding them for death and decay</p>\t\t<p><b>Max Dnd Uptime</b>: Prioritizes dnd uptime and can hold runes for longer then rune grace</p>",values:[{name:"Max Rune Downtime",value:n.MaxRuneDowntime},{name:"Max Dnd Uptime",value:n.MaxDndUptime}],showWhen:n=>n.getTalents().summonGargoyle&&(n.getRotation().useDeathAndDecay||!n.getTalents().scourgeStrike),changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])});const q=W({fieldName:"useEmpowerRuneWeapon",label:"Empower Rune Weapon",labelTooltip:"Use Empower Rune Weapon in rotation."}),Q=W({fieldName:"btGhoulFrenzy",label:"BT Ghoul Frenzy",labelTooltip:"Use Ghoul Frenzy only with Blood Tap.",showWhen:n=>n.getTalents().ghoulFrenzy,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),Y=R({fieldName:"firstDisease",label:"First Disease",labelTooltip:"Chose which disease to apply first.",values:[{name:"Frost Fever",value:t.FrostFever},{name:"Blood Plague",value:t.BloodPlague}],showWhen:n=>n.getTalents().summonGargoyle,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),Z=R({fieldName:"armyOfTheDead",label:"Army of the Dead",labelTooltip:"Chose how to use Army of the Dead.",values:[{name:"Do not use",value:a.DoNotUse},{name:"Pre pull",value:a.PreCast},{name:"As Major CD",value:a.AsMajorCd}]}),V=R({fieldName:"startingPresence",label:"Starting Presence",labelTooltip:"Chose the presence you start combat in.",values:[{name:"Blood",value:i.Blood},{name:"Unholy",value:i.Unholy}],showWhen:n=>n.getTalents().summonGargoyle,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),X=R({fieldName:"bloodRuneFiller",label:"Blood Rune Filler",labelTooltip:"Chose what to spend your free blood runes on.",values:[{name:"Blood Strike",value:o.BloodStrike},{name:"Blood Boil",value:o.BloodBoil}],showWhen:n=>n.getTalents().summonGargoyle,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),$=R({fieldName:"bloodTap",label:"Blood Tap",labelTooltip:"Chose what to spend your Blood Tap on.",values:[{name:"Ghoul Frenzy",value:s.GhoulFrenzy},{name:"Icy Touch",value:s.IcyTouch},{name:"Blood Strike",value:s.BloodStrikeBT},{name:"Blood Boil",value:s.BloodBoilBT}],showWhen:n=>n.getTalents().summonGargoyle,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),nn=W({fieldName:"useAms",label:"Use AMS",labelTooltip:"Use AMS around predicted damage for a RP gain.",showWhen:n=>n.getTalents().howlingBlast,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),en=C({fieldName:"avgAmsSuccessRate",label:"Avg AMS Success %",labelTooltip:"Chance for damage to be taken during the 5 second window of AMS.",showWhen:n=>1==n.getRotation().useAms,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),tn=C({fieldName:"avgAmsHit",label:"Avg AMS Hit",labelTooltip:"How much on average (+-10%) the character is hit for when AMS is successful.",showWhen:n=>1==n.getRotation().useAms,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),an={inputs:[Q,q,$,Z,Y,V,X,K,C({fieldName:"oblitDelayDuration",label:"Oblit Delay (ms)",labelTooltip:"How long a FS/HB/HW can delay a Oblit by.",showWhen:n=>n.getTalents().howlingBlast,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),nn,en,tn]},on={name:"Frost BL",data:r.create({talentsString:"23050005-32005350352203012300033101351",glyphs:l.create({major1:h.GlyphOfObliterate,major2:h.GlyphOfFrostStrike,major3:h.GlyphOfDisease,minor1:m.GlyphOfHornOfWinter,minor2:m.GlyphOfPestilence,minor3:m.GlyphOfRaiseDead})})},sn={name:"Frost UH",data:r.create({talentsString:"-32002350352203012300033101351-230200305003",glyphs:l.create({major1:h.GlyphOfObliterate,major2:h.GlyphOfFrostStrike,major3:h.GlyphOfDisease,minor1:m.GlyphOfHornOfWinter,minor2:m.GlyphOfPestilence,minor3:m.GlyphOfRaiseDead})})},rn={name:"Unholy DW",data:r.create({talentsString:"-320043500002-2300303050032152000150013133051",glyphs:l.create({major1:h.GlyphOfTheGhoul,major2:h.GlyphOfDarkDeath,major3:h.GlyphOfDeathAndDecay,minor1:m.GlyphOfHornOfWinter,minor2:m.GlyphOfPestilence,minor3:m.GlyphOfRaiseDead})})},ln={name:"Unholy 2H",data:r.create({talentsString:"-320050500002-2300303150032152000150013133151",glyphs:l.create({major1:h.GlyphOfTheGhoul,major2:h.GlyphOfDarkDeath,major3:h.GlyphOfIcyTouch,minor1:m.GlyphOfHornOfWinter,minor2:m.GlyphOfPestilence,minor3:m.GlyphOfRaiseDead})})},hn={name:"Blood DPS",data:r.create({talentsString:"2305020530003303231023101351--230220305003",glyphs:l.create({major1:h.GlyphOfDancingRuneWeapon,major2:h.GlyphOfDeathStrike,major3:h.GlyphOfDisease,minor1:m.GlyphOfHornOfWinter,minor2:m.GlyphOfPestilence,minor3:m.GlyphOfRaiseDead})})},mn=d.create({useDeathAndDecay:!0,btGhoulFrenzy:!1,refreshHornOfWinter:!1,useEmpowerRuneWeapon:!0,startingPresence:i.Unholy,bloodRuneFiller:o.BloodBoil,useAms:!1}),dn=g.create({startingRunicPower:0,petUptime:1,precastGhoulFrenzy:!0,precastHornOfWinter:!0}),gn=d.create({useDeathAndDecay:!1,btGhoulFrenzy:!1,refreshHornOfWinter:!1,useEmpowerRuneWeapon:!0,startingPresence:i.Unholy,bloodRuneFiller:o.BloodBoil,useAms:!1,avgAmsSuccessRate:.5,avgAmsHit:5e3,oblitDelayDuration:0}),cn=g.create({startingRunicPower:0,petUptime:1,precastHornOfWinter:!0}),pn={},fn=c.create({flask:p.FlaskOfEndlessRage,food:f.FoodDragonfinFilet,defaultPotion:u.PotionOfSpeed,petFood:y.PetFoodSpicedMammothTreats,prepopPotion:u.PotionOfSpeed,thermalSapper:!0,fillerExplosive:b.ExplosiveSaroniteBomb}),un={name:"P1 2H Pre-Raid Unholy",toolbar:v,enableWhen:n=>n.getTalents().summonGargoyle,gear:S.fromJsonString('{ "items": [\n    {\n      "id": 41386,\n      "enchant": 44879,\n      "gems": [\n        41400,\n        49110\n      ]\n    },\n    {\n      "id": 37397\n    },\n    {\n      "id": 37627,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 37647,\n      "enchant": 44472\n    },\n    {\n      "id": 39617,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 41355,\n      "enchant": 44484,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 39618,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40688,\n      "gems": [\n        39996,\n        42142\n      ]\n    },\n    {\n      "id": 37193,\n      "enchant": 38374,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 44306,\n      "enchant": 55016,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 37642\n    },\n    {\n      "id": 44935\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 41257,\n      "enchant": 53344\n    },\n    {},\n    {\n      "id": 40867\n    }\n  ]}')},yn={name:"P1 2H BiS Unholy",toolbar:v,enableWhen:n=>n.getTalents().summonGargoyle,gear:S.fromJsonString('{ "items": [\n    {\n      "id": 44006,\n      "enchant": 44879,\n      "gems": [\n        41400,\n        49110\n      ]\n    },\n    {\n      "id": 44664,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40557,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40403,\n      "enchant": 44472\n    },\n    {\n      "id": 40550,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40330,\n      "enchant": 44484,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40552,\n      "enchant": 54999,\n      "gems": [\n        40038,\n        0\n      ]\n    },\n    {\n      "id": 40278,\n      "gems": [\n        42142,\n        42142\n      ]\n    },\n    {\n      "id": 40556,\n      "enchant": 38374,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 40591,\n      "enchant": 55016\n    },\n    {\n      "id": 39401\n    },\n    {\n      "id": 40075\n    },\n    {\n      "id": 40256\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 40384,\n      "enchant": 53344\n    },\n    {},\n    {\n      "id": 40207\n    }\n  ]}')},bn={name:"P1 DW Pre-Raid Unholy",toolbar:v,enableWhen:n=>n.getTalents().summonGargoyle,gear:S.fromJsonString('{"items": [\n    {\n      "id": 41386,\n      "enchant": 44879,\n      "gems": [\n        41400,\n        49110\n      ]\n    },\n    {\n      "id": 37397\n    },\n    {\n      "id": 37627,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 37647,\n      "enchant": 44472\n    },\n    {\n      "id": 39617,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 41355,\n      "enchant": 44484,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 39618,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40688,\n      "gems": [\n        39996,\n        42142\n      ]\n    },\n    {\n      "id": 37193,\n      "enchant": 38374,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 44306,\n      "enchant": 55016,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 37642\n    },\n    {\n      "id": 44935\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 41383,\n      "enchant": 53344\n    },\n    {\n      "id": 40703,\n      "enchant": 44495\n    },\n    {\n      "id": 40867\n    }\n  ]}')},Sn={name:"P1 DW BiS Unholy",toolbar:v,enableWhen:n=>n.getTalents().summonGargoyle,gear:S.fromJsonString('{"items": [\n    {\n      "id": 44006,\n      "enchant": 44879,\n      "gems": [\n        41400,\n        49110\n      ]\n    },\n    {\n      "id": 39421\n    },\n    {\n      "id": 40557,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40403,\n      "enchant": 44472\n    },\n    {\n      "id": 40550,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40330,\n      "enchant": 44484,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40347,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40278,\n      "gems": [\n        42142,\n        42142\n      ]\n    },\n    {\n      "id": 40294,\n      "enchant": 38374\n    },\n    {\n      "id": 39706,\n      "enchant": 55016,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40717\n    },\n    {\n      "id": 40075\n    },\n    {\n      "id": 37390\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 40189,\n      "enchant": 53344\n    },\n    {\n      "id": 40491,\n      "enchant": 44495\n    },\n    {\n      "id": 42620\n    }\n  ]}')},Tn={name:"P1 Pre-Raid Frost",tooltip:v,enableWhen:n=>n.getTalents().howlingBlast,gear:S.fromJsonString('{  "items": [\n    {\n      "id": 41386,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        49110\n      ]\n    },\n    {\n      "id": 37397\n    },\n    {\n      "id": 37593,\n      "enchant": 44871\n    },\n    {\n      "id": 37647,\n      "enchant": 44472\n    },\n    {\n      "id": 39617,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 41355,\n      "enchant": 44484,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 39618,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 37194,\n      "gems": [\n        39996,\n        42142\n      ]\n    },\n    {\n      "id": 37193,\n      "enchant": 38374,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 44306,\n      "enchant": 55016,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 37642\n    },\n    {\n      "id": 37151\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 44250,\n      "enchant": 53343\n    },\n    {\n      "id": 44250,\n      "enchant": 53344\n    },\n    {\n      "id": 40715\n    }\n  ]}')},Dn={name:"P1 BiS Frost",tooltip:v,enableWhen:n=>n.getTalents().howlingBlast,gear:S.fromJsonString('{   "items": [\n    {\n      "id": 44006,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        42702\n      ]\n    },\n    {\n      "id": 44664,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40557,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40403,\n      "enchant": 44472\n    },\n    {\n      "id": 40550,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40330,\n      "enchant": 44484,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40552,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40278,\n      "gems": [\n        39996,\n        42142\n      ]\n    },\n    {\n      "id": 40556,\n      "enchant": 38374,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40591,\n      "enchant": 55016\n    },\n    {\n      "id": 39401\n    },\n    {\n      "id": 40075\n    },\n    {\n      "id": 40256\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 40189,\n      "enchant": 53343\n    },\n    {\n      "id": 40189,\n      "enchant": 53344\n    },\n    {\n      "id": 40207\n    }\n  ]}')},On={name:"P1 Game BiS Frost",tooltip:v,enableWhen:n=>n.getTalents().howlingBlast,gear:S.fromJsonString('{ "items": [\n  {\n    "id": 51312,\n    "enchant": 44879,\n    "gems": [\n      41398,\n      49110\n    ]\n  },\n  {\n    "id": 54581,\n    "gems": [\n      40117\n    ]\n  },\n  {\n    "id": 51314,\n    "enchant": 44871,\n    "gems": [\n      42153\n    ]\n  },\n  {\n    "id": 47548,\n    "enchant": 44472,\n    "gems": [\n      42153\n    ]\n  },\n  {\n    "id": 51310,\n    "enchant": 44489,\n    "gems": [\n      42153,\n      40117\n    ]\n  },\n  {\n    "id": 50670,\n    "enchant": 44484,\n    "gems": [\n      40117,\n      0\n    ]\n  },\n  {\n    "id": 50675,\n    "enchant": 54999,\n    "gems": [\n      40117,\n      40117,\n      0\n    ]\n  },\n  {\n    "id": 50620,\n    "gems": [\n      40117,\n      40117,\n      40117\n    ]\n  },\n  {\n    "id": 51313,\n    "enchant": 38374,\n    "gems": [\n      40117,\n      40117\n    ]\n  },\n  {\n    "id": 54578,\n    "enchant": 55016,\n    "gems": [\n      40117,\n      40117\n    ]\n  },\n  {\n    "id": 50693,\n    "gems": [\n      40117\n    ]\n  },\n  {\n    "id": 52572,\n    "gems": [\n      40117\n    ]\n  },\n  {\n    "id": 50363\n  },\n  {\n    "id": 54590\n  },\n  {\n    "id": 50737,\n    "enchant": 53343,\n    "gems": [\n      40117\n    ]\n  },\n  {\n    "id": 50737,\n    "enchant": 53344,\n    "gems": [\n      40111\n    ]\n  },\n  {\n    "id": 50459\n  }\n]}')},Pn={name:"P1 BiS Blood",toolbar:v,enableWhen:n=>n.getTalents().dancingRuneWeapon,gear:S.fromJsonString('{ "items": [\n    {\n      "id": 44006,\n      "enchant": 44879,\n      "gems": [\n        41400,\n        49110\n      ]\n    },\n    {\n      "id": 44664,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40557,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40403,\n      "enchant": 44472\n    },\n    {\n      "id": 40550,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40330,\n      "enchant": 44484,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40552,\n      "enchant": 54999,\n      "gems": [\n        40038,\n        0\n      ]\n    },\n    {\n      "id": 40278,\n      "gems": [\n        42142,\n        42142\n      ]\n    },\n    {\n      "id": 40556,\n      "enchant": 38374,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 40591,\n      "enchant": 55016\n    },\n    {\n      "id": 39401\n    },\n    {\n      "id": 40075\n    },\n    {\n      "id": 40256\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 40384,\n      "enchant": 53344\n    },\n    {},\n    {\n      "id": 40207\n    }\n  ]}')};class En extends F{constructor(n,e){super(n,e,{cssClass:"deathknight-sim-ui",knownIssues:["<p>Blood dps is not implemented.</p>\t\t\t\t<p>Rotation logic is not fully tuned yet.</p>\t\t\t\t<p>Pet scaling is likely to not be properly working until further beta testing.</p>"],epStats:[T.StatStrength,T.StatArmor,T.StatAgility,T.StatAttackPower,T.StatExpertise,T.StatMeleeHit,T.StatMeleeCrit,T.StatMeleeHaste,T.StatArmorPenetration,T.StatSpellHit,T.StatSpellCrit,T.StatSpellHaste],epReferenceStat:T.StatAttackPower,displayStats:[T.StatHealth,T.StatArmor,T.StatStrength,T.StatAgility,T.StatSpellHit,T.StatSpellCrit,T.StatAttackPower,T.StatMeleeHit,T.StatMeleeCrit,T.StatMeleeHaste,T.StatArmorPenetration,T.StatExpertise],defaults:{gear:Dn.gear,epWeights:D.fromMap({[T.StatStrength]:2.88,[T.StatAgility]:1.22,[T.StatArmor]:.01,[T.StatAttackPower]:1,[T.StatExpertise]:2.26,[T.StatMeleeHaste]:1.23,[T.StatMeleeHit]:1.15,[T.StatMeleeCrit]:1.43,[T.StatArmorPenetration]:1.56,[T.StatSpellHit]:.71,[T.StatSpellCrit]:.07}),consumes:fn,rotation:gn,talents:on.data,specOptions:cn,raidBuffs:O.create({giftOfTheWild:P.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:P.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:P.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:P.TristateEffectImproved,stoneskinTotem:P.TristateEffectImproved,moonkinAura:P.TristateEffectRegular,wrathOfAirTotem:!0}),partyBuffs:E.create({heroicPresence:!1}),individualBuffs:A.create({blessingOfKings:!0,blessingOfMight:P.TristateEffectImproved}),debuffs:G.create({bloodFrenzy:!0,faerieFire:P.TristateEffectImproved,sunderArmor:!0,ebonPlaguebringer:!0,mangle:!0,heartOfTheCrusader:!0,shadowMastery:!0})},playerIconInputs:[],rotationInputs:an,petConsumeInputs:[H],includeBuffDebuffInputs:[M],excludeBuffDebuffInputs:[k,U,N,j],otherInputs:{inputs:[x,J,_,L,I,z]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[on,sn,rn,ln,hn],gear:[Tn,Dn,On,bn,Sn,un,yn,Pn]}})}}export{En as D,on as F,pn as O,Dn as P,rn as U,gn as a,cn as b,fn as c,mn as d,dn as e,Sn as f};
//# sourceMappingURL=sim-0d8be463.chunk.js.map
