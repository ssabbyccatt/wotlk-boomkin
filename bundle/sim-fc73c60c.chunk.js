import{A as e,c3 as n,cc as a,cd as t,bF as i,_ as l,z as s,ce as o,c6 as r,c7 as d,c8 as m,c9 as c,ca as u,cf as f,Z as h,bv as S,bq as p,bt as g,E as b,k as v,b as y,ao as I,aO as W,am as w,Y as T,ap as M}from"./raid_sim_action-a61fd70b.chunk.js";import{m as P,j as k,o as O,d as E,a as F,e as N,B as A,I as H,R as D,p as j,q as x,r as B,s as C,T as R,i as _}from"./individual_sim_ui-2f0e86c1.chunk.js";import{T as L}from"./totem_inputs-eec6567e.chunk.js";const G=P({fieldName:"bloodlust",id:e.fromSpellId(2825)}),q=k({fieldName:"shield",values:[{color:"grey",value:n.NoShield},{actionId:e.fromSpellId(57960),value:n.WaterShield},{actionId:e.fromSpellId(49281),value:n.LightningShield}]}),z=k({fieldName:"imbueMh",values:[{color:"grey",value:a.NoImbue},{actionId:e.fromSpellId(58804),value:a.WindfuryWeapon},{actionId:e.fromSpellId(58790),value:a.FlametongueWeapon},{actionId:e.fromSpellId(58789),value:a.FlametongueWeaponDownrank},{actionId:e.fromSpellId(58796),value:a.FrostbrandWeapon}]}),J=k({fieldName:"imbueOh",values:[{color:"grey",value:a.NoImbue},{actionId:e.fromSpellId(58804),value:a.WindfuryWeapon},{actionId:e.fromSpellId(58790),value:a.FlametongueWeapon},{actionId:e.fromSpellId(58789),value:a.FlametongueWeaponDownrank},{actionId:e.fromSpellId(58796),value:a.FrostbrandWeapon}]}),K=O({fieldName:"syncType",label:"Sync/Stagger Setting",labelTooltip:"Choose your sync or stagger option, Perfect Sync makes your weapons always attack at the same time, which is ideal for mixed imbues. Delayed Offhand is similar but additionally adds a slight delay to the offhand attacks while staying within the 0.5s flurry ICD window, ideal for matched imbues.",values:[{name:"None",value:t.NoSync},{name:"Perfect Sync",value:t.SyncMainhandOffhandSwings},{name:"Delayed Offhand",value:t.DelayOffhandSwings}]}),Y={inputs:[E({fieldName:"lightningboltWeave",label:"Enable Weaving Lightning Bolt",labelTooltip:"Will provide a DPS increase, but is harder to execute",enableWhen:e=>e.getTalents().maelstromWeapon>0}),F({fieldName:"maelstromweaponMinStack",label:"Minimum Maelstrom Stacks to Weave",labelTooltip:"3 stacks is the most realistic, however there are cases where lower might be possible, just much harder to do in practice",values:[{name:"1",value:1},{name:"2",value:2},{name:"3",value:3},{name:"4",value:4},{name:"5",value:5}],enableWhen:e=>e.getRotation().lightningboltWeave}),E({fieldName:"lavaburstWeave",label:"Enable Weaving Lava Burst",labelTooltip:"Not particularily useful for dual wield, mostly a 2h option",enableWhen:e=>e.getRotation().lightningboltWeave}),N({fieldName:"firenovaManaThreshold",label:"Minimum mana to cast Fire Nova",labelTooltip:"Fire Nova will not be cast when mana is below this value. Set this medium-low, it has a bad mana-to-damage ratio"}),N({fieldName:"shamanisticRageManaThreshold",label:"Mana % to use Shamanistic Rage",enableWhen:e=>e.getTalents().shamanisticRage})]},Z={name:"Standard",data:i.create({talentsString:"053030152-30405003105021333031131031051",glyphs:l.create({major1:s.GlyphOfStormstrike,major2:s.GlyphOfFlametongueWeapon,major3:s.GlyphOfFeralSpirit})})},Q=o.create({totems:r.create({earth:d.StrengthOfEarthTotem,air:m.WindfuryTotem,fire:c.MagmaTotem,water:u.ManaSpringTotem})}),U=f.create({shield:n.LightningShield,bloodlust:!0,imbueMh:a.WindfuryWeapon,imbueOh:a.FlametongueWeapon,syncType:t.SyncMainhandOffhandSwings}),V=h.create({defaultPotion:S.PotionOfSpeed,flask:p.FlaskOfEndlessRage,food:g.FoodFishFeast}),X={name:"Preraid Preset",tooltip:A,gear:b.fromJsonString('{"items": [\n        {\n          "id": 43311,\n          "enchant": 44879,\n          "gems": [\n            41398,\n            42156\n          ]\n        },\n        {\n          "id": 40678\n        },\n        {\n          "id": 37373,\n          "enchant": 44871\n        },\n        {\n          "id": 37840,\n          "enchant": 55002\n        },\n        {\n          "id": 39597,\n          "enchant": 44489,\n          "gems": [\n            40053,\n            40088\n          ]\n        },\n        {\n          "id": 43131,\n          "enchant": 44484,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 39601,\n          "enchant": 54999,\n          "gems": [\n            40053,\n            0\n          ]\n        },\n        {\n          "id": 37407,\n          "gems": [\n            42156\n          ]\n        },\n        {\n          "id": 37669,\n          "enchant": 38374\n        },\n        {\n          "id": 37167,\n          "enchant": 55016,\n          "gems": [\n            40053,\n            42156\n          ]\n        },\n        {\n          "id": 37685\n        },\n        {\n          "id": 37642\n        },\n        {\n          "id": 37390\n        },\n        {\n          "id": 40684\n        },\n        {\n          "id": 41384,\n          "enchant": 44492\n        },\n        {\n          "id": 40704,\n          "enchant": 44492\n        },\n        {\n          "id": 37575\n        }\n    ]}')},$={name:"P1 Preset",tooltip:A,gear:b.fromJsonString('{"items": [\n        {\n          "id": 40543,\n          "enchant": 44879,\n          "gems": [\n            41398,\n            40014\n          ]\n        },\n        {\n          "id": 44661,\n          "gems": [\n            40014\n          ]\n        },\n        {\n          "id": 40524,\n          "enchant": 44871,\n          "gems": [\n            40014\n          ]\n        },\n        {\n          "id": 40403,\n          "enchant": 55002\n        },\n        {\n          "id": 40523,\n          "enchant": 44489,\n          "gems": [\n            40003,\n            40014\n          ]\n        },\n        {\n          "id": 40282,\n          "enchant": 44484,\n          "gems": [\n            42702,\n            0\n          ]\n        },\n        {\n          "id": 40520,\n          "enchant": 54999,\n          "gems": [\n            42154,\n            0\n          ]\n        },\n        {\n          "id": 40275,\n          "gems": [\n            42156\n          ]\n        },\n        {\n          "id": 40522,\n          "enchant": 38374,\n          "gems": [\n            39999,\n            42156\n          ]\n        },\n        {\n          "id": 40367,\n          "enchant": 55016,\n          "gems": [\n            40058\n          ]\n        },\n        {\n          "id": 40474\n        },\n        {\n          "id": 40074\n        },\n        {\n          "id": 40684\n        },\n        {\n          "id": 37390\n        },\n        {\n          "id": 39763,\n          "enchant": 44492\n        },\n        {\n          "id": 39468,\n          "enchant": 44492\n        },\n        {\n          "id": 40322\n        }\n      ]}')};class ee extends H{constructor(e,n){super(e,n,{cssClass:"enhancement-shaman-sim-ui",knownIssues:["Fire Elemental is not yet implemented","Some things regarding weapon imbues need further testing and changes"],epStats:[v.StatIntellect,v.StatAgility,v.StatStrength,v.StatAttackPower,v.StatMeleeHit,v.StatMeleeCrit,v.StatMeleeHaste,v.StatArmorPenetration,v.StatExpertise,v.StatSpellPower,v.StatSpellCrit,v.StatSpellHit],epReferenceStat:v.StatAttackPower,displayStats:[v.StatHealth,v.StatStamina,v.StatStrength,v.StatAgility,v.StatIntellect,v.StatAttackPower,v.StatMeleeHit,v.StatMeleeCrit,v.StatMeleeHaste,v.StatExpertise,v.StatArmorPenetration,v.StatSpellPower,v.StatNatureSpellPower,v.StatSpellHit,v.StatSpellCrit,v.StatSpellHaste],defaults:{gear:$.gear,epWeights:y.fromMap({[v.StatIntellect]:1.517,[v.StatAgility]:1.561,[v.StatStrength]:1.1,[v.StatSpellPower]:1.117,[v.StatSpellHit]:0,[v.StatSpellCrit]:.897,[v.StatAttackPower]:1,[v.StatMeleeHit]:1.42,[v.StatMeleeCrit]:.805,[v.StatMeleeHaste]:1.37,[v.StatArmorPenetration]:.471,[v.StatExpertise]:0}),consumes:V,rotation:Q,talents:Z.data,specOptions:U,raidBuffs:I.create({arcaneBrilliance:!0,divineSpirit:!0,giftOfTheWild:W.TristateEffectImproved,battleShout:W.TristateEffectImproved,leaderOfThePack:W.TristateEffectImproved}),partyBuffs:w.create({}),individualBuffs:T.create({blessingOfKings:!0,blessingOfWisdom:W.TristateEffectImproved,blessingOfMight:W.TristateEffectImproved}),debuffs:M.create({bloodFrenzy:!0,sunderArmor:!0,curseOfWeakness:W.TristateEffectRegular,curseOfElements:!0,faerieFire:W.TristateEffectImproved,judgementOfWisdom:!0,misery:!0})},playerIconInputs:[q,G,z,J],rotationInputs:Y,includeBuffDebuffInputs:[D,j,x,B],excludeBuffDebuffInputs:[C],otherInputs:{inputs:[K,R,_]},customSections:[L],encounterPicker:{showExecuteProportion:!1},presets:{talents:[Z],gear:[X,$]}})}}export{Q as D,ee as E,$ as P,Z as S,U as a,V as b};
//# sourceMappingURL=sim-fc73c60c.chunk.js.map
