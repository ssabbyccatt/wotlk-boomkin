import{bF as n,_ as e,J as t,K as a,d7 as i,d8 as s,d9 as r,cE as l,Z as o,bq as d,bt as h,bv as m,E as c,A as u,T as g,k as f,b as p,ao as S,aO as b,am as T,Y as E,ap as R}from"./raid_sim_action-a61fd70b.chunk.js";import{B as k,m as v,c as w,j as x,d as W,e as y,a as P,I as A,T as O,i as M}from"./individual_sim_ui-2f0e86c1.chunk.js";const C={name:"Arms",data:n.create({talentsString:"3022032023335100102012213231251-305-2033",glyphs:e.create({major1:t.GlyphOfRending,major2:t.GlyphOfHeroicStrike,major3:t.GlyphOfExecution,minor1:a.GlyphOfBattle,minor2:a.GlyphOfCommand,minor3:a.GlyphOfCharge})})},N={name:"Fury",data:n.create({talentsString:"30202300233-325003101504310053120500351",glyphs:e.create({major1:t.GlyphOfWhirlwind,major2:t.GlyphOfHeroicStrike,major3:t.GlyphOfExecution,minor1:a.GlyphOfBattle,minor2:a.GlyphOfCommand,minor3:a.GlyphOfCharge})})},I=i.create({useRend:!0,prioritizeWw:!0,sunderArmor:s.SunderArmorMaintain,hsRageThreshold:40,rendRageThreshold:75,msRageThreshold:60,rendCdThreshold:3,useHsDuringExecute:!0,useBtDuringExecute:!0,useWwDuringExecute:!0,useSlamOverExecute:!0}),H=i.create({useRend:!0,useMs:!0,sunderArmor:s.SunderArmorMaintain,msRageThreshold:60,hsRageThreshold:60,rendCdThreshold:3,useHsDuringExecute:!0,spamExecute:!1,maintainDemoShout:!0}),B=r.create({startingRage:0,useRecklessness:!0,shout:l.WarriorShoutBattle}),D=o.create({flask:d.FlaskOfEndlessRage,food:h.FoodHeartyRhino,defaultPotion:m.IndestructiblePotion}),G={name:"P1 Pre-Raid Fury",tooltip:k,enableWhen:n=>n.getTalents().bloodthirst,gear:c.fromJsonString('{"items": [\n        {\n          "id": 41386,\n          "enchant": 44879,\n          "gems": [\n            41398,\n            49110\n          ]\n        },\n        {\n          "id": 42645,\n          "gems": [\n            42142\n          ]\n        },\n        {\n          "id": 44195,\n          "enchant": 44871\n        },\n        {\n          "id": 37647,\n          "enchant": 55002\n        },\n        {\n          "id": 39606,\n          "enchant": 44489,\n          "gems": [\n            42142,\n            39996\n          ]\n        },\n        {\n          "id": 44203,\n          "enchant": 44484,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 39609,\n          "enchant": 54999,\n          "gems": [\n            40037,\n            0\n          ]\n        },\n        {\n          "id": 40694,\n          "gems": [\n            42142,\n            39996\n          ]\n        },\n        {\n          "id": 37193,\n          "enchant": 38374,\n          "gems": [\n            39996,\n            39996\n          ]\n        },\n        {\n          "id": 44306,\n          "enchant": 55016,\n          "gems": [\n            39996,\n            39996\n          ]\n        },\n        {\n          "id": 42642,\n          "gems": [\n            40037\n          ]\n        },\n        {\n          "id": 37642\n        },\n        {\n          "id": 42987\n        },\n        {\n          "id": 40684\n        },\n        {\n          "id": 37852,\n          "enchant": 44492\n        },\n        {\n          "id": 37852,\n          "enchant": 44492\n        },\n        {\n          "id": 37191,\n          "enchant": 41167\n        }\n      ]}')},U={name:"P1 BiS Fury",tooltip:k,enableWhen:n=>n.getTalents().bloodthirst,gear:c.fromJsonString('{ "items": [\n        {\n          "id": 40528,\n          "enchant": 44879,\n          "gems": [\n            41398,\n            39996\n          ]\n        },\n        {\n          "id": 44664,\n          "gems": [\n            39996\n          ]\n        },\n        {\n          "id": 40530,\n          "enchant": 44871,\n          "gems": [\n            40058\n          ]\n        },\n        {\n          "id": 40403,\n          "enchant": 55002\n        },\n        {\n          "id": 40525,\n          "enchant": 44489,\n          "gems": [\n            42142,\n            42142\n          ]\n        },\n        {\n          "id": 40733,\n          "enchant": 44484,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 40541,\n          "enchant": 54999,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 40317,\n          "gems": [\n            42142\n          ]\n        },\n        {\n          "id": 40529,\n          "enchant": 38374,\n          "gems": [\n            39996,\n            39996\n          ]\n        },\n        {\n          "id": 40591,\n          "enchant": 55016\n        },\n        {\n          "id": 43993,\n          "gems": [\n            39996\n          ]\n        },\n        {\n          "id": 40075\n        },\n        {\n          "id": 42987\n        },\n        {\n          "id": 40256\n        },\n        {\n          "id": 40384,\n          "enchant": 44492\n        },\n        {\n          "id": 40384,\n          "enchant": 44492\n        },\n        {\n          "id": 40385\n        }\n      ]}')},j={name:"P1 Pre-Raid Arms",tooltip:k,enableWhen:n=>n.getTalents().mortalStrike,gear:c.fromJsonString('{ "items": [\n        {\n          "id": 41386,\n          "enchant": 44879,\n          "gems": [\n            41285,\n            49110\n          ]\n        },\n        {\n          "id": 42645,\n          "gems": [\n            42142\n          ]\n        },\n        {\n          "id": 44195,\n          "enchant": 44871\n        },\n        {\n          "id": 37647,\n          "enchant": 55002\n        },\n        {\n          "id": 39606,\n          "enchant": 44489,\n          "gems": [\n            42142,\n            39996\n          ]\n        },\n        {\n          "id": 41355,\n          "enchant": 44484,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 39609,\n          "enchant": 54999,\n          "gems": [\n            40037,\n            0\n          ]\n        },\n        {\n          "id": 40694,\n          "gems": [\n            42142,\n            39996\n          ]\n        },\n        {\n          "id": 37193,\n          "enchant": 38374,\n          "gems": [\n            39996,\n            39996\n          ]\n        },\n        {\n          "id": 44306,\n          "enchant": 55016,\n          "gems": [\n            0,\n            40037\n          ]\n        },\n        {\n          "id": 42642,\n          "gems": [\n            40037\n          ]\n        },\n        {\n          "id": 37642\n        },\n        {\n          "id": 42987\n        },\n        {\n          "id": 40684\n        },\n        {\n          "id": 37852,\n          "enchant": 44492\n        },\n        {},\n        {\n          "id": 44504,\n          "enchant": 41167,\n          "gems": [\n            40038\n          ]\n        }\n      ]}')},F={name:"P1 BiS Arms",tooltip:k,enableWhen:n=>n.getTalents().mortalStrike,gear:c.fromJsonString('{"items": [\n        {\n          "id": 40528,\n          "enchant": 44879,\n          "gems": [\n            41398,\n            39996\n          ]\n        },\n        {\n          "id": 44664,\n          "gems": [\n            39996\n          ]\n        },\n        {\n          "id": 40530,\n          "enchant": 44871,\n          "gems": [\n            40058\n          ]\n        },\n        {\n          "id": 40403,\n          "enchant": 55002\n        },\n        {\n          "id": 40525,\n          "enchant": 44489,\n          "gems": [\n            42142,\n            42142\n          ]\n        },\n        {\n          "id": 40330,\n          "enchant": 44484,\n          "gems": [\n            39996,\n            39996\n          ]\n        },\n        {\n          "id": 40541,\n          "enchant": 54999,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 40317,\n          "gems": [\n            42142\n          ]\n        },\n        {\n          "id": 40529,\n          "enchant": 38374,\n          "gems": [\n            39996,\n            0\n          ]\n        },\n        {\n          "id": 40591,\n          "enchant": 55016\n        },\n        {\n          "id": 43993,\n          "gems": [\n            39996\n          ]\n        },\n        {\n          "id": 40717\n        },\n        {\n          "id": 42987\n        },\n        {\n          "id": 40256\n        },\n        {\n          "id": 40384,\n          "enchant": 44492\n        },\n        {},\n        {\n          "id": 40385\n        }\n      ]}')},z=v({fieldName:"useRecklessness",id:u.fromSpellId(1719)}),J=w({fieldName:"startingRage",label:"Starting Rage",labelTooltip:"Initial rage at the start of each iteration."}),_=x({fieldName:"shout",values:[{color:"c79c6e",value:l.WarriorShoutNone},{actionId:u.fromSpellId(2048),value:l.WarriorShoutBattle},{actionId:u.fromSpellId(469),value:l.WarriorShoutCommanding}]}),K={inputs:[W({fieldName:"useMs",label:"Use Mortal Strike",labelTooltip:"Use Mortal Strike when rage threshold is met.",showWhen:n=>n.getTalents().mortalStrike}),W({fieldName:"useCleave",label:"Use Cleave",labelTooltip:"Use Cleave instead of Heroic Strike."}),W({fieldName:"useRend",label:"Use Rend",labelTooltip:"Use Rend on free globals."}),W({fieldName:"prioritizeWw",label:"Prioritize WW",labelTooltip:"Prioritize Whirlwind over Bloodthirst.",showWhen:n=>n.getTalents().bloodthirst}),y({fieldName:"msRageThreshold",label:"Mortal Strike rage threshold",labelTooltip:"Mortal Strike when rage is above:",showWhen:n=>n.getTalents().mortalStrike}),y({fieldName:"hsRageThreshold",label:"HS rage threshold",labelTooltip:"Heroic Strike when rage is above:"}),y({fieldName:"rendRageThreshold",label:"Rend rage threshold",labelTooltip:"Rend will only be used when rage is larger than this value.",showWhen:n=>n.getRotation().useRend&&n.getTalents().bloodthirst}),y({fieldName:"rendCdThreshold",label:"Rend Refresh Time",labelTooltip:"Refresh Rend when the remaining duration is less than this amount of time (seconds).",changeEmitter:n=>g.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter]),showWhen:n=>n.getTalents().mortalStrike}),W({fieldName:"useHsDuringExecute",label:"HS during Execute Phase",labelTooltip:"Use Heroic Strike during Execute Phase."}),W({fieldName:"useBtDuringExecute",label:"BT during Execute Phase",labelTooltip:"Use Bloodthirst during Execute Phase.",changeEmitter:n=>g.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter]),showWhen:n=>n.getTalents().bloodthirst}),W({fieldName:"useWwDuringExecute",label:"WW during Execute Phase",labelTooltip:"Use Whirlwind during Execute Phase.",showWhen:n=>n.getTalents().bloodthirst}),W({fieldName:"useSlamOverExecute",label:"Slam Over Execute",labelTooltip:"Use Slam Over Execute when Bloodsurge Procs in Execute Phase.",showWhen:n=>n.getTalents().bloodthirst}),W({fieldName:"spamExecute",label:"Spam Execute",labelTooltip:"Use Execute whenever possible during Execute Phase",showWhen:n=>n.getTalents().mortalStrike}),P({fieldName:"sunderArmor",label:"Sunder Armor",values:[{name:"Never",value:s.SunderArmorNone},{name:"Help Stack",value:s.SunderArmorHelpStack},{name:"Maintain Debuff",value:s.SunderArmorMaintain}]}),W({fieldName:"maintainDemoShout",label:"Maintain Demo Shout",labelTooltip:"Keep Demo Shout active on the primary target."}),W({fieldName:"maintainThunderClap",label:"Maintain Thunder Clap",labelTooltip:"Keep Thunder Clap active on the primary target."})]};class q extends A{constructor(n,e){super(n,e,{cssClass:"warrior-sim-ui",knownIssues:[],epStats:[f.StatStrength,f.StatAgility,f.StatAttackPower,f.StatExpertise,f.StatMeleeHit,f.StatMeleeCrit,f.StatMeleeHaste,f.StatArmorPenetration],epReferenceStat:f.StatAttackPower,displayStats:[f.StatHealth,f.StatStamina,f.StatStrength,f.StatAgility,f.StatAttackPower,f.StatExpertise,f.StatMeleeHit,f.StatMeleeCrit,f.StatMeleeHaste,f.StatArmorPenetration],defaults:{gear:U.gear,epWeights:p.fromMap({[f.StatStrength]:2.17,[f.StatAgility]:1.4,[f.StatAttackPower]:1,[f.StatExpertise]:3.29,[f.StatMeleeHit]:.41,[f.StatMeleeCrit]:1.83,[f.StatMeleeHaste]:2.07,[f.StatArmorPenetration]:.5}),consumes:D,rotation:I,talents:N.data,specOptions:B,raidBuffs:S.create({giftOfTheWild:b.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:b.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:b.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:b.TristateEffectImproved,stoneskinTotem:b.TristateEffectImproved}),partyBuffs:T.create({heroicPresence:!1}),individualBuffs:E.create({blessingOfKings:!0,blessingOfMight:b.TristateEffectImproved}),debuffs:R.create({bloodFrenzy:!0,heartOfTheCrusader:!0,mangle:!0,sunderArmor:!0,curseOfWeakness:b.TristateEffectRegular,faerieFire:b.TristateEffectImproved})},playerIconInputs:[_,z],rotationInputs:K,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[J,O,M]},encounterPicker:{showExecuteProportion:!0},presets:{talents:[C,N],gear:[U,G,F,j]}})}}export{H as A,B as D,N as F,F as P,q as W,C as a,D as b,I as c,U as d};
//# sourceMappingURL=sim-ab102a25.chunk.js.map
