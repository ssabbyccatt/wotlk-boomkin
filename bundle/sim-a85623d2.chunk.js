import{bF as n,_ as e,w as a,x as t,d0 as i,d1 as s,d2 as l,Z as o,bq as r,bt as d,bv as p,ao as f,aO as c,Y as m,ap as h,E as S,d3 as u,A as g,k as I,b as w,am as y}from"./raid_sim_action-a61fd70b.chunk.js";import{B as T,j as b,m as v,a as P,d as O,e as F,I as B,k as E,R as M,a5 as k,a6 as C,p as W,a7 as D,a8 as A,h as H,T as N}from"./individual_sim_ui-2f0e86c1.chunk.js";const j={name:"Standard",data:n.create({talentsString:"05032031--325023051223010323151301351",glyphs:e.create({major1:a.GlyphOfShadow,major2:a.GlyphOfMindFlay,major3:a.GlyphOfDispersion,minor1:t.GlyphOfFortitude,minor2:t.GlyphOfShadowProtection,minor3:t.GlyphOfShadowfiend})})},G=i.create({rotationType:s.Ideal}),x=l.create({useShadowfiend:!0,useMindBlast:!0,useShadowWordDeath:!0}),_=o.create({flask:r.FlaskOfTheFrostWyrm,food:d.FoodFishFeast,defaultPotion:p.PotionOfWildMagic,prepopPotion:p.PotionOfWildMagic}),R=f.create({giftOfTheWild:c.TristateEffectImproved,powerWordFortitude:c.TristateEffectImproved,strengthOfEarthTotem:c.TristateEffectImproved,arcaneBrilliance:!0,divineSpirit:!0,trueshotAura:!0,leaderOfThePack:c.TristateEffectImproved,icyTalons:!0,totemOfWrath:!0,moonkinAura:c.TristateEffectImproved,wrathOfAirTotem:!0,sanctifiedRetribution:!0,bloodlust:!0}),V=m.create({blessingOfKings:!0,blessingOfWisdom:c.TristateEffectImproved,blessingOfMight:c.TristateEffectImproved,vampiricTouch:!0}),J=h.create({sunderArmor:!0,faerieFire:c.TristateEffectImproved,bloodFrenzy:!0,ebonPlaguebringer:!0,heartOfTheCrusader:!0,judgementOfWisdom:!0}),L={name:"P1 Preset",tooltip:T,gear:S.fromJsonString(' {\n    "items": [\n      {\n        "id": 40562,\n        "enchant": 44877,\n        "gems": [\n          41285,\n          39998\n        ]\n      },\n      {\n        "id": 44661,\n        "gems": [\n          40026\n        ]\n      },\n      {\n        "id": 40459,\n        "enchant": 44874,\n        "gems": [\n          39998\n        ]\n      },\n      {\n        "id": 44005,\n        "enchant": 55642,\n        "gems": [\n          40026\n        ]\n      },\n      {\n        "id": 44002,\n        "enchant": 33990,\n        "gems": [\n          39998,\n          39998\n        ]\n      },\n      {\n        "id": 44008,\n        "enchant": 44498,\n        "gems": [\n          39998,\n          0\n        ]\n      },\n      {\n        "id": 40454,\n        "enchant": 54999,\n        "gems": [\n          40049,\n          0\n        ]\n      },\n      {\n        "id": 40561,\n        "gems": [\n          39998\n        ]\n      },\n      {\n        "id": 40560,\n        "enchant": 41602\n      },\n      {\n        "id": 40558,\n        "enchant": 55016\n      },\n      {\n        "id": 40719\n      },\n      {\n        "id": 40399\n      },\n      {\n        "id": 40255\n      },\n      {\n        "id": 40432\n      },\n      {\n        "id": 40395,\n        "enchant": 44487\n      },\n      {\n        "id": 40273\n      },\n      {\n        "id": 39712\n      }\n    ]\n  }')},q={name:"PreBis Preset",tooltip:T,gear:S.fromJsonString('{\n    "items": [\n      {\n        "id": 42553,\n        "enchant": 44877,\n        "gems": [\n          41285,\n          40049\n        ]\n      },\n      {\n        "id": 40680\n      },\n      {\n        "id": 34210,\n        "enchant": 44874,\n        "gems": [\n          39998,\n          40026\n        ]\n      },\n      {\n        "id": 41610,\n        "enchant": 55642\n      },\n      {\n        "id": 43792,\n        "enchant": 33990,\n        "gems": [\n          39998,\n          40051\n        ]\n      },\n      {\n        "id": 37361,\n        "enchant": 44498,\n        "gems": [\n          0\n        ]\n      },\n      {\n        "id": 39530,\n        "enchant": 54999,\n        "gems": [\n          40049,\n          0\n        ]\n      },\n      {\n        "id": 40696,\n        "gems": [\n          40049,\n          39998\n        ]\n      },\n      {\n        "id": 37854,\n        "enchant": 41602\n      },\n      {\n        "id": 44202,\n        "enchant": 60623,\n        "gems": [\n          40026\n        ]\n      },\n      {\n        "id": 40585\n      },\n      {\n        "id": 37694\n      },\n      {\n        "id": 37835\n      },\n      {\n        "id": 37873\n      },\n      {\n        "id": 41384,\n        "enchant": 44487\n      },\n      {\n        "id": 40698\n      },\n      {\n        "id": 37177\n      }\n    ]\n  }')},z=b({fieldName:"armor",values:[{color:"grey",value:u.NoArmor},{actionId:g.fromSpellId(48168),value:u.InnerFire}]}),K=v({fieldName:"useMindBlast",id:g.fromSpellId(48127)}),Y=v({fieldName:"useShadowWordDeath",id:g.fromSpellId(48158)}),Z=v({fieldName:"useShadowfiend",id:g.fromSpellId(34433)}),Q={inputs:[P({fieldName:"rotationType",label:"Rotation Type",labelTooltip:"Choose how to clip your mindflay. Basic will never clip. Clipping will clip for other spells and use a 2xMF2 when there is time for 4 ticks. Ideal will evaluate the DPS gain of every action to determine MF actions.",values:[{name:"Basic",value:s.Basic},{name:"Clipping",value:s.Clipping},{name:"Ideal",value:s.Ideal},{name:"AoE",value:s.AoE}]}),O({fieldName:"precastVt",label:"Precast Vampiric Touch",labelTooltip:"Start fight with VT landing at time 0"}),F({fieldName:"latency",label:"Channeling Latency (ms)",labelTooltip:"Latency after a channel that lasts longer than GCD. 0 to disable. Has a minimum value of 100ms if set."})]};class U extends B{constructor(n,e){super(n,e,{cssClass:"shadow-priest-sim-ui",knownIssues:[],epStats:[I.StatIntellect,I.StatSpirit,I.StatSpellPower,I.StatSpellHit,I.StatSpellCrit,I.StatSpellHaste,I.StatMP5],epReferenceStat:I.StatSpellPower,displayStats:[I.StatHealth,I.StatStamina,I.StatIntellect,I.StatSpirit,I.StatSpellPower,I.StatSpellHit,I.StatSpellCrit,I.StatSpellHaste,I.StatMP5],modifyDisplayStats:n=>{let e=new w;return e=e.addStat(I.StatSpellHit,1*n.getTalents().shadowFocus*E),{talents:e}},defaults:{gear:L.gear,epWeights:w.fromMap({[I.StatIntellect]:.05,[I.StatSpirit]:.11,[I.StatSpellPower]:1,[I.StatShadowSpellPower]:1,[I.StatSpellCrit]:.163,[I.StatSpellHaste]:1,[I.StatMP5]:0}),consumes:_,rotation:G,talents:j.data,specOptions:x,raidBuffs:R,partyBuffs:y.create({}),individualBuffs:V,debuffs:J},playerIconInputs:[z],rotationIconInputs:[K,Y,Z],rotationInputs:Q,includeBuffDebuffInputs:[M,k,C,W,D,A,H],excludeBuffDebuffInputs:[],otherInputs:{inputs:[N]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[j],gear:[q,L]}})}}export{G as D,L as P,U as S,j as a,x as b,_ as c};
//# sourceMappingURL=sim-a85623d2.chunk.js.map
