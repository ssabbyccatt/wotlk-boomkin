import{A as e,aq as t,ar as a,bH as n,bF as s,bI as i,bJ as r,Z as l,bq as o,bt as d,bv as p,ao as c,aO as f,Y as S,ap as m,E as u,k as h,b,am as g}from"./raid_sim_action-a61fd70b.chunk.js";import{m as I,a as T,b as v,c as w,B as P,I as O,T as y}from"./individual_sim_ui-2f0e86c1.chunk.js";const E=I({fieldName:"innervateTarget",id:e.fromSpellId(29166),extraCssClasses:["within-raid-sim-hide"],getValue:e=>e.getSpecOptions().innervateTarget?.targetIndex!=t,setValue:(e,n,s)=>{const i=n.getSpecOptions();i.innervateTarget=a.create({targetIndex:s?0:t}),n.setSpecOptions(e,i)}}),M={inputs:[T({fieldName:"type",label:"Type",labelTooltip:"If set to 'Adaptive', will dynamically adjust rotation.",values:[{name:"Adaptive",value:n.Adaptive}]}),v({fieldName:"battleRes",label:"Use Battle Res",labelTooltip:"Cast Battle Res on an ally sometime during the encounter."}),v({fieldName:"useIs",label:"Use Insect Swarm",labelTooltip:"Should the rotation use Insect Swarm."}),v({fieldName:"useMf",label:"Use Moonfire",labelTooltip:"Should the rotation use Moonfire."}),w({fieldName:"mfInsideEclipseThreshold",label:"Moonfire inside eclipse max timing",labelTooltip:"Max eclipse uptime at which Moonfire can be applied/refreshed. 15 = never refresh,  0= always refresh."}),w({fieldName:"isInsideEclipseThreshold",label:"Insect Swarm inside eclipse max timing",labelTooltip:"Max eclipse uptime at which Insect Swarm can be applied/refreshed. 15 = never refresh,  0= always refresh."})]},A={name:"Standard",data:s.create({talentsString:"510022312503135231351--520033"})},x=i.create({type:n.Adaptive}),B=r.create({useIs:!0,useMf:!0}),N=l.create({flask:o.FlaskOfTheFrostWyrm,food:d.FoodFishFeast,defaultPotion:p.PotionOfSpeed}),k=c.create({giftOfTheWild:f.TristateEffectImproved,powerWordFortitude:f.TristateEffectImproved,strengthOfEarthTotem:f.TristateEffectImproved,arcaneBrilliance:!0,divineSpirit:!0,trueshotAura:!0,leaderOfThePack:f.TristateEffectImproved,icyTalons:!0,totemOfWrath:!0,moonkinAura:f.TristateEffectImproved,wrathOfAirTotem:!0,sanctifiedRetribution:!0,bloodlust:!0}),F=S.create({blessingOfKings:!0,blessingOfWisdom:f.TristateEffectImproved,blessingOfMight:f.TristateEffectImproved,vampiricTouch:!0}),C=m.create({sunderArmor:!0,faerieFire:f.TristateEffectImproved,bloodFrenzy:!0,ebonPlaguebringer:!0,heartOfTheCrusader:!0,judgementOfWisdom:!0}),H={name:"P1 Preset",tooltip:P,gear:u.fromJsonString('{"items": [\n        {\n            "id": 40467,\n            "enchant": 50368,\n            "gems": [\n                    41285,\n                    39998\n\t\t\t]\n        },\n        {\n            "id": 44661,\n            "gems": [\n            \t40026\n\t\t\t]\n        },\n        {\n            "id": 40470,\n            "enchant": 50338,\n            "gems": [\n             39998\n            ]\n        },\n        {\n            "id": 40469,\n            "enchant":  60692,\n            "gems": [\n\t\t\t\t 39998,\n\t\t\t\t 40026\n            ]\n        },\n        {\n            "id": 40561,\n            "enchant":  54793,\n            "gems": [\n             39998\n            ]\n        },\n        {\n            "id": 40560,\n            "enchant": 41602\n        },\n        {\n            "id": 40558,\n            "enchant": 55016\n        },\n        {\n            "id": 44008,\n            "enchant":  60767,\n            "gems": [\n            \t39998\n            ]\n        },\n        {\n            "id": 40466,\n            "enchant":  54999,\n            "gems": [ \n            \t39998\n            ]\n        },\n        {\n            "id": 40399\n        },\n        {\n            "id": 40080\n        },\n        {\n            "id": 40255\n        },\n        {\n            "id": 40432\n        },\n        {\n            "id": 40405,\n            "enchant": 55642\n        },\n        {\n            "id": 40395,\n            "enchant":  60714\n        },\n        {\n            "id": 40192\n        },\n        {\n            "id": 40321\n        }\n    ]}')};class W extends O{constructor(e,t){super(e,t,{cssClass:"balance-druid-sim-ui",knownIssues:[],epStats:[h.StatIntellect,h.StatSpirit,h.StatSpellPower,h.StatArcaneSpellPower,h.StatNatureSpellPower,h.StatSpellHit,h.StatSpellCrit,h.StatSpellHaste,h.StatMP5],epReferenceStat:h.StatSpellPower,displayStats:[h.StatHealth,h.StatStamina,h.StatIntellect,h.StatSpirit,h.StatSpellPower,h.StatArcaneSpellPower,h.StatNatureSpellPower,h.StatSpellHit,h.StatSpellCrit,h.StatSpellHaste,h.StatMP5],defaults:{gear:H.gear,epWeights:b.fromMap({[h.StatIntellect]:.54,[h.StatSpirit]:.1,[h.StatSpellPower]:1,[h.StatArcaneSpellPower]:1,[h.StatNatureSpellPower]:0,[h.StatSpellCrit]:.84,[h.StatSpellHaste]:1.29,[h.StatMP5]:0}),consumes:N,rotation:x,talents:A.data,specOptions:B,raidBuffs:k,partyBuffs:g.create({}),individualBuffs:F,debuffs:C},playerIconInputs:[E],rotationInputs:M,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[y]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[A],gear:[H]}})}}export{W as B,x as D,H as P,A as S,B as a,N as b};
//# sourceMappingURL=sim-8ac72b1e.chunk.js.map
